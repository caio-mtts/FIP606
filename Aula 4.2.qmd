---
title: "Tabela de contingência"
author: "Caio"
format: html
editor: visual
execute: 
  error: false
  warning: false
---

```{r}
#| eval: false
#| include: false
#| echo: false

install.packages("datapasta")
install.packages("janitor")
```

```{r}
#| include: false
#| echo: false

library(datapasta)
library(janitor)
library(tidyverse)
library(ggthemes)
```

## Tabela de contingência

A seguir, serão construídas tabelas de contingências. São tabelas que permitem fazer contagens de elementos/ ocorrências de variáveis categóricas dentro de uma mesma coluna rapidamente.

### Carregando os dados

Os dados utilizados neste exemplo serão obtidos de uma planilha on-line:

```{r}
cr <- read.csv("https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv")
```

### Utilizando a função `count`

Utilizando a função `count` `(dplyr)` é possível contar os valores únicos (níveis) dentro de uma coluna específica (fator).

```{r}
cr %>%
  count(region)

cr %>% 
  count(zone)
```

\
Também é possível contar as ocorrências únicas combinando dois fatores.

```{r}
cr %>%
  count(region,zone)
```

### Utilizando a função `tabyl`

Dentro do pacote `janitor` há a função `tabyl`, que gera uma tabela de frequências

```{r}
cr %>% 
  tabyl(region)

cr %>% 
  tabyl(cultivar, farm_management)
```

### Gráficos de barras (colunas)

Para avaliar visualmente a ocorrência dos tipos de manejo para cada cultivar, construiremos um gráfico de barras:

```{r}
cr %>%
  count(farm_management, cultivar) %>% 
  ggplot(aes(cultivar, n, fill = farm_management))+
  geom_col(position = "dodge2")
```

Também é possível construir um gráfico com a mesma ideia utilizando a função `facet_wrap`:

```{r}
cr %>%
  count(farm_management, cultivar) %>% 
  ggplot(aes(cultivar, n, fill = farm_management, label = n))+
  geom_col(position = "dodge2")+
  geom_text(position = position_dodge(width = 0.9))+
  theme_bw()+
  facet_wrap(~cultivar, scales = "free_x")+
    theme(strip.text.x = element_blank(),
          legend.position = "top")
```

\
\_\_\_\_\_\_\_\_\_\_\_

```{r}
library(gsheet)
data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1aID5Dh6PlBVCKzU1j7k-WA6zuWQWE2NhtWEgdJtt5iA/edit#gid=921203844")
```

```{r}
data %>%
  group_by(trat) %>%
  ggplot(aes(trat, comp))+
  geom_jitter(width = 0.1)
```

```{r}
data %>%
  group_by(trat) %>%
  summarise(mean_comp = mean(comp),
            sd_comp = sd(comp)) %>%
  ggplot(aes(trat, mean_comp))+
  #geom_col(fill = "steelblue", width = 0.5)+
  geom_point(size = 2)+
  ylim (5,20)+
  geom_errorbar(aes(ymin = mean_comp - sd_comp,
                    ymax = mean_comp + sd_comp),
                width = 0.2)+
  annotate(geom = "text",
           x = 1,
           y = 18,
           label = "*", size =5)+
  labs(
    y = "Mean Comp")
```
