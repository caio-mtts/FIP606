[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "FIP 606 | por Caio M.",
    "section": "",
    "text": "Este é um site baseado em Quarto. Ele foi criado para armazenar e compartilhar as informações geradas ao longo das aulas da disciplina FIP 606 - Análise e Visualização de Dados em Fitopatologia, oferecida pelo prof. Emerson Del Ponte e cursada durante o primeiro semestre de 2024."
  },
  {
    "objectID": "Aula 2.html",
    "href": "Aula 2.html",
    "title": "Aula 2 - Importação de dados e criação de gráficos simples",
    "section": "",
    "text": "Nesta aula serão apresentadas formas de se importar (carregar) dados/ planilhas, a partir de diferentes fontes, e como fazer uma análise visual rápida dos dados obtidos.\n\n\nOs dados/ planilhas podem ser obtidos de diferentes formas.\nInicialmente, será carregado um conjunto de dados presente em um pacote do R (ec50estimator):\n\nlibrary(ec50estimator)\n\ndf1 &lt;- multi_isolate\nhead(df1)\n\n  isolate   field   fungicida  dose     growth\n1       1 Organic Fungicide A 0e+00 20.2082399\n2       1 Organic Fungicide A 1e-05 20.1168279\n3       1 Organic Fungicide A 1e-04 19.2479678\n4       1 Organic Fungicide A 1e-03 15.8123455\n5       1 Organic Fungicide A 1e-02  7.3206757\n6       1 Organic Fungicide A 1e-01  0.6985264\n\n\n\nUma outra maneira, é carregar dados de uma planilha em Excel. Para isso, existem duas alternativas. A primeira faz uso do pacote readxl.\n\nOBS.: Para as opções apresentadas a seguir, é importante mencionar que o arquivo a ser importado deve estar dentro da pasta do projeto.\n\nlibrary(readxl)\ndf2 &lt;- read_excel(\"dados-diversos.xlsx\")\nhead(df2)\n\n# A tibble: 6 × 3\n  trat    rep  comp\n  &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 Mg2       1   9  \n2 Mg2       2  12.5\n3 Mg2       3  10  \n4 Mg2       4   8  \n5 Mg2       5  13.2\n6 Mg2       6  11  \n\n\n\nQuando uma planilha possui mais de uma guia, é necessário indicar na função qual a guia que desejamos importar:\n\ndf21 &lt;- read_excel(\"dados-diversos.xlsx\", sheet = \"escala\")\nhead(df21)\n\n# A tibble: 6 × 7\n  assessment rater acuracia precisao vies_geral vies_sistematico vies_constante\n  &lt;chr&gt;      &lt;chr&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;            &lt;dbl&gt;          &lt;dbl&gt;\n1 Unaided    A        0.809    0.826      0.979            1.19         0.112  \n2 Unaided    B        0.722    0.728      0.991            0.922       -0.106  \n3 Unaided    C        0.560    0.715      0.783            1.16         0.730  \n4 Unaided    D        0.818    0.819      0.999            0.948       -0.00569\n5 Unaided    E        0.748    0.753      0.993            1.10         0.0719 \n6 Unaided    F        0.695    0.751      0.925            0.802        0.336  \n\n\n\nA segunda forma de importação, faz uso do pacote tidyverse, com a função read_csv:\n\nlibrary(tidyverse)\ndf3 &lt;- read_csv(\"dados-diversos.csv\")\nhead(df3)\n\n# A tibble: 6 × 4\n  Irrigation   rep   day severity\n  &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;\n1 Furrow         1     0     0.01\n2 Furrow         2     0     0.01\n3 Furrow         3     0     0.01\n4 Furrow         1     7     0.04\n5 Furrow         2     7     0.04\n6 Furrow         3     7     0.04\n\n\n\nA terceira forma de se carregar dados é a partir de uma planilha google, disponível online.\nPara isso, fazemos uso do pacote gsheet:\n\nlibrary(gsheet)\ndf4 &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1aID5Dh6PlBVCKzU1j7k-WA6zuWQWE2NhtWEgdJtt5iA/edit#gid=921203844\")\nhead(df4)\n\n# A tibble: 6 × 3\n  trat    rep  comp\n  &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 Mg2       1   9  \n2 Mg2       2  12.5\n3 Mg2       3  10  \n4 Mg2       4   8  \n5 Mg2       5  13.2\n6 Mg2       6  11  \n\ndf5 &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1aID5Dh6PlBVCKzU1j7k-WA6zuWQWE2NhtWEgdJtt5iA/edit#gid=517586736\")\nhead(df5)\n\n# A tibble: 6 × 3\n  especie   rep   tcm\n  &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;\n1 Fasi        1  1.5 \n2 Fasi        2  1.59\n3 Fasi        3  1.52\n4 Fasi        4  1.52\n5 Fasi        5  1.6 \n6 Fasi        6  1.56\n\n\n\n\n\nA seguir os pacotes tidyverse, ggplot2 e ggthemes serão utilizados para gerar um gráfico e possibilitar uma visualização rápida de um determinado dataframe carregado.\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(ggthemes)\n\n\nInicialmente, será feito um gráfico simples de pontos. O objetivo é plotar as observações, de acordo com os tratamentos, e conhecer a distribuição dos dados de um determinado data frame (df4):\n\ng1 &lt;- df4 %&gt;% \n  ggplot(aes(trat, comp))+\n  geom_point()\n\ng1\n\n\n\n\n\n\n\n\n\nUm segundo gráfico simples, de outro conjunto de dados:\n\ng2 &lt;- df1 %&gt;%\n  ggplot(aes(growth))+\n  geom_histogram()\n\ng2\n\n\n\n\n\n\n\n\n\nA seguir, será feito um novo plot. Este, consistirá de um gráfico do tipo boxplot, acrescido de pontos dispersos:\n\ng3 &lt;- df4 %&gt;%\n  ggplot(aes(trat, comp))+\n  geom_boxplot(outlier.alpha = 0)+\n  geom_jitter(width = 0.07,\n              color = \"black\",\n              shape = 1,\n              size = 2)+\n  scale_y_continuous(limits = c(0,20), n.breaks = 10)+\n  #ylim(0,20)+\n  labs(x = \"Tratamento\", y = \"Comprimento\", title = \"Boxplot\", caption = \"Fonte: Primeiro Boxplot\")+\n  theme_clean()\n\ng3\n\n\n\n\n\n\n\n\n\nPor fim, para salvar os gráficos gerados, podemos utilizar a função ggsave. Porém, essa função salvará o último gráfico gerado.\n\nggsave(\"Boxplot.png\", bg=\"transparent\")\n\n\nOutra opção para salvar plots gerados anteriormente é a seguinte:\n\n#Em .pdf:\npdf(\"histograma.pdf\", bg = \"transparent\")\nprint(g2)\ndev.off()\n\n#Em .png:\npng(\"Pontos.png\", bg = \"transparent\")\nprint(g1)\ndev.off()",
    "crumbs": [
      "Home",
      "Aulas iniciais",
      "Aula 2 - Importação de dados e criação de gráficos simples"
    ]
  },
  {
    "objectID": "Aula 2.html#importando-dados-planilhas",
    "href": "Aula 2.html#importando-dados-planilhas",
    "title": "Aula 2 - Importação de dados e criação de gráficos simples",
    "section": "",
    "text": "Os dados/ planilhas podem ser obtidos de diferentes formas.\nInicialmente, será carregado um conjunto de dados presente em um pacote do R (ec50estimator):\n\nlibrary(ec50estimator)\n\ndf1 &lt;- multi_isolate\nhead(df1)\n\n  isolate   field   fungicida  dose     growth\n1       1 Organic Fungicide A 0e+00 20.2082399\n2       1 Organic Fungicide A 1e-05 20.1168279\n3       1 Organic Fungicide A 1e-04 19.2479678\n4       1 Organic Fungicide A 1e-03 15.8123455\n5       1 Organic Fungicide A 1e-02  7.3206757\n6       1 Organic Fungicide A 1e-01  0.6985264\n\n\n\nUma outra maneira, é carregar dados de uma planilha em Excel. Para isso, existem duas alternativas. A primeira faz uso do pacote readxl.\n\nOBS.: Para as opções apresentadas a seguir, é importante mencionar que o arquivo a ser importado deve estar dentro da pasta do projeto.\n\nlibrary(readxl)\ndf2 &lt;- read_excel(\"dados-diversos.xlsx\")\nhead(df2)\n\n# A tibble: 6 × 3\n  trat    rep  comp\n  &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 Mg2       1   9  \n2 Mg2       2  12.5\n3 Mg2       3  10  \n4 Mg2       4   8  \n5 Mg2       5  13.2\n6 Mg2       6  11  \n\n\n\nQuando uma planilha possui mais de uma guia, é necessário indicar na função qual a guia que desejamos importar:\n\ndf21 &lt;- read_excel(\"dados-diversos.xlsx\", sheet = \"escala\")\nhead(df21)\n\n# A tibble: 6 × 7\n  assessment rater acuracia precisao vies_geral vies_sistematico vies_constante\n  &lt;chr&gt;      &lt;chr&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;            &lt;dbl&gt;          &lt;dbl&gt;\n1 Unaided    A        0.809    0.826      0.979            1.19         0.112  \n2 Unaided    B        0.722    0.728      0.991            0.922       -0.106  \n3 Unaided    C        0.560    0.715      0.783            1.16         0.730  \n4 Unaided    D        0.818    0.819      0.999            0.948       -0.00569\n5 Unaided    E        0.748    0.753      0.993            1.10         0.0719 \n6 Unaided    F        0.695    0.751      0.925            0.802        0.336  \n\n\n\nA segunda forma de importação, faz uso do pacote tidyverse, com a função read_csv:\n\nlibrary(tidyverse)\ndf3 &lt;- read_csv(\"dados-diversos.csv\")\nhead(df3)\n\n# A tibble: 6 × 4\n  Irrigation   rep   day severity\n  &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;\n1 Furrow         1     0     0.01\n2 Furrow         2     0     0.01\n3 Furrow         3     0     0.01\n4 Furrow         1     7     0.04\n5 Furrow         2     7     0.04\n6 Furrow         3     7     0.04\n\n\n\nA terceira forma de se carregar dados é a partir de uma planilha google, disponível online.\nPara isso, fazemos uso do pacote gsheet:\n\nlibrary(gsheet)\ndf4 &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1aID5Dh6PlBVCKzU1j7k-WA6zuWQWE2NhtWEgdJtt5iA/edit#gid=921203844\")\nhead(df4)\n\n# A tibble: 6 × 3\n  trat    rep  comp\n  &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 Mg2       1   9  \n2 Mg2       2  12.5\n3 Mg2       3  10  \n4 Mg2       4   8  \n5 Mg2       5  13.2\n6 Mg2       6  11  \n\ndf5 &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1aID5Dh6PlBVCKzU1j7k-WA6zuWQWE2NhtWEgdJtt5iA/edit#gid=517586736\")\nhead(df5)\n\n# A tibble: 6 × 3\n  especie   rep   tcm\n  &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;\n1 Fasi        1  1.5 \n2 Fasi        2  1.59\n3 Fasi        3  1.52\n4 Fasi        4  1.52\n5 Fasi        5  1.6 \n6 Fasi        6  1.56",
    "crumbs": [
      "Home",
      "Aulas iniciais",
      "Aula 2 - Importação de dados e criação de gráficos simples"
    ]
  },
  {
    "objectID": "Aula 2.html#uso-do-tidyverse-ggplot2-para-visualização-rápida-dos-dados",
    "href": "Aula 2.html#uso-do-tidyverse-ggplot2-para-visualização-rápida-dos-dados",
    "title": "Aula 2 - Importação de dados e criação de gráficos simples",
    "section": "",
    "text": "A seguir os pacotes tidyverse, ggplot2 e ggthemes serão utilizados para gerar um gráfico e possibilitar uma visualização rápida de um determinado dataframe carregado.\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(ggthemes)\n\n\nInicialmente, será feito um gráfico simples de pontos. O objetivo é plotar as observações, de acordo com os tratamentos, e conhecer a distribuição dos dados de um determinado data frame (df4):\n\ng1 &lt;- df4 %&gt;% \n  ggplot(aes(trat, comp))+\n  geom_point()\n\ng1\n\n\n\n\n\n\n\n\n\nUm segundo gráfico simples, de outro conjunto de dados:\n\ng2 &lt;- df1 %&gt;%\n  ggplot(aes(growth))+\n  geom_histogram()\n\ng2\n\n\n\n\n\n\n\n\n\nA seguir, será feito um novo plot. Este, consistirá de um gráfico do tipo boxplot, acrescido de pontos dispersos:\n\ng3 &lt;- df4 %&gt;%\n  ggplot(aes(trat, comp))+\n  geom_boxplot(outlier.alpha = 0)+\n  geom_jitter(width = 0.07,\n              color = \"black\",\n              shape = 1,\n              size = 2)+\n  scale_y_continuous(limits = c(0,20), n.breaks = 10)+\n  #ylim(0,20)+\n  labs(x = \"Tratamento\", y = \"Comprimento\", title = \"Boxplot\", caption = \"Fonte: Primeiro Boxplot\")+\n  theme_clean()\n\ng3\n\n\n\n\n\n\n\n\n\nPor fim, para salvar os gráficos gerados, podemos utilizar a função ggsave. Porém, essa função salvará o último gráfico gerado.\n\nggsave(\"Boxplot.png\", bg=\"transparent\")\n\n\nOutra opção para salvar plots gerados anteriormente é a seguinte:\n\n#Em .pdf:\npdf(\"histograma.pdf\", bg = \"transparent\")\nprint(g2)\ndev.off()\n\n#Em .png:\npng(\"Pontos.png\", bg = \"transparent\")\nprint(g1)\ndev.off()",
    "crumbs": [
      "Home",
      "Aulas iniciais",
      "Aula 2 - Importação de dados e criação de gráficos simples"
    ]
  },
  {
    "objectID": "Aula 1.html",
    "href": "Aula 1.html",
    "title": "Aula 1 - Criação de projetos, documentos, conjunto de dados e manipulações",
    "section": "",
    "text": "Nessa primeira aula será feita uma breve introdução aos softwares R e RStudio, apresentando como criar projetos, scripts e arquivos e como salvá-los. Além disso, será demonstrado como instalar e carregar pacotes e criar vetores, data frames e realizar operações básicas no RStudio.\n\n\n\nInicialmente, será criado um projeto, onde serão mantidos todos os arquivos da disciplina. Para isso, bastar clicar em:\n &gt; “File”\n  &gt; “New Project…”\n   &gt; “New Directory”\n    &gt; “New Project”.\n     Nessa parte, é dado um nome ao projeto e escolhida a pasta em que ele será mantido. Feito isso, prosseguimos, clicando em “Create Project”.\n\n\n\n\n\n\nO script é o local onde são desenvolvidos e salvos os códigos. Para criar um novo script no RStudio, clique em:\n &gt; “File”\n  &gt; “New File”\n   &gt; “R Script”\n\n\n\n\nAo longo da disciplina, as atividades desenvolvidas serão salvas em documentos. O objetivo é permitir que os códigos desenvolvidos, as análises realizadas e os resultados obtidos, junto com as interpretações e comentários, sejam mantidos em um mesmo arquivo (documento), facilitando o acesso e entendimento do que foi feito.\nOs formatos dos documentos que podem ser utilizados são “R Markdown” (.rmd) e “Quarto document” (.qmd). Daremos preferência ao último.\nPortanto, para criar um novo documento em “.qmd”, seguiremos o seguinte caminho:\n &gt; “File”\n  &gt; “New File”\n   &gt; “Quarto document…”\n    Nessa janela, será dado um título ao arquivo, o nome do autor e em seguida, seleciona-se “Create”.\nO novo documento será salvo na pasta do projeto, criado anteriormente.\n\n\n\n\n\nOs pacotes são fundamentais para o funcionamento do RStudio, pois contém funções que serão utilizadas em várias análises no decorrer da disciplina.\nUm pacote pode ser instalado manualmente, clicando em:\n &gt; “Packages”\n  &gt; “Install”\n    &gt; Na linha “Packages”, digite o nome do pacote de interesse, por exemplo, “Agricolae”.\n    &gt; Em sequência, clique em “Install”\nOutra opção, é realizar a instalação com uma fórmula, como segue:\n\ninstall.packages(\"ggplot2\")\n\nApós a instalação, é preciso carregar o pacote, para isso:\n\nlibrary(ggplot2)\n\n\n\n\nPara trabalhar no R, algumas vezes devemos criar vetores, segue alguns exemplos simples de como o fazer:\n\nx &lt;- 5\nx\n\n[1] 5\n\n\nTambém é possível criar um vetor com um conjunto de valores:\n\nA &lt;- c(1:20)\nA\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20\n\n\nNo RStudio, também é possível realizar operações com os vetores criados, por exemplo\n\ny &lt;- x^2\ny\n\n[1] 25\n\n\n\nz &lt;- y-2*x\nz\n\n[1] 15\n\n\n\nB &lt;- A*5\nB\n\n [1]   5  10  15  20  25  30  35  40  45  50  55  60  65  70  75  80  85  90  95\n[20] 100\n\n\n\n\n\nPara criação de dataframes, é utilizada a função data.frame. Primeiros é dado um nome ao objeto (df), em sequência especificamos o que será colocado nele (os vetores A e B).\n\ndf &lt;- data.frame(A,B)\ndf\n\n    A   B\n1   1   5\n2   2  10\n3   3  15\n4   4  20\n5   5  25\n6   6  30\n7   7  35\n8   8  40\n9   9  45\n10 10  50\n11 11  55\n12 12  60\n13 13  65\n14 14  70\n15 15  75\n16 16  80\n17 17  85\n18 18  90\n19 19  95\n20 20 100\n\n\n\n\n\nPara manipulação de dados e/ou data frames, é possível adotar funções presentes no pacote dplyr. Alguns exemplos.\n\nlibrary(dplyr)\n\n\n\nEssa função é capaz de criar novas colunas em função das já existentes. Além disso, com ela é possível modificar e deletar colunas.\n\ndf &lt;- df %&gt;% \n  mutate(C = A*0.5,\n         D = A^2,\n         E = B*C*A)\ndf\n\n    A   B    C   D       E\n1   1   5  0.5   1     2.5\n2   2  10  1.0   4    20.0\n3   3  15  1.5   9    67.5\n4   4  20  2.0  16   160.0\n5   5  25  2.5  25   312.5\n6   6  30  3.0  36   540.0\n7   7  35  3.5  49   857.5\n8   8  40  4.0  64  1280.0\n9   9  45  4.5  81  1822.5\n10 10  50  5.0 100  2500.0\n11 11  55  5.5 121  3327.5\n12 12  60  6.0 144  4320.0\n13 13  65  6.5 169  5492.5\n14 14  70  7.0 196  6860.0\n15 15  75  7.5 225  8437.5\n16 16  80  8.0 256 10240.0\n17 17  85  8.5 289 12282.5\n18 18  90  9.0 324 14580.0\n19 19  95  9.5 361 17147.5\n20 20 100 10.0 400 20000.0\n\n\nPara deletar colunas:\n\ndf &lt;- df %&gt;% \n  mutate(C = NULL)\ndf\n\n    A   B   D       E\n1   1   5   1     2.5\n2   2  10   4    20.0\n3   3  15   9    67.5\n4   4  20  16   160.0\n5   5  25  25   312.5\n6   6  30  36   540.0\n7   7  35  49   857.5\n8   8  40  64  1280.0\n9   9  45  81  1822.5\n10 10  50 100  2500.0\n11 11  55 121  3327.5\n12 12  60 144  4320.0\n13 13  65 169  5492.5\n14 14  70 196  6860.0\n15 15  75 225  8437.5\n16 16  80 256 10240.0\n17 17  85 289 12282.5\n18 18  90 324 14580.0\n19 19  95 361 17147.5\n20 20 100 400 20000.0\n\n\n\n\n\nEssa função permite alterar o nome atribuído as colunas, usando a seguinte ordem: nome novo = nome antigo. Por exemplo:\n\ndf &lt;- df %&gt;% \n  rename(C = E)\ndf\n\n    A   B   D       C\n1   1   5   1     2.5\n2   2  10   4    20.0\n3   3  15   9    67.5\n4   4  20  16   160.0\n5   5  25  25   312.5\n6   6  30  36   540.0\n7   7  35  49   857.5\n8   8  40  64  1280.0\n9   9  45  81  1822.5\n10 10  50 100  2500.0\n11 11  55 121  3327.5\n12 12  60 144  4320.0\n13 13  65 169  5492.5\n14 14  70 196  6860.0\n15 15  75 225  8437.5\n16 16  80 256 10240.0\n17 17  85 289 12282.5\n18 18  90 324 14580.0\n19 19  95 361 17147.5\n20 20 100 400 20000.0\n\n\n\n\n\nCom essa função, é possível criar um novo data frame, selecionado colunas de um data frame já existente, por exemplo:\n\ndf2 &lt;- df %&gt;% \n  select(A, B, C)\ndf2\n\n    A   B       C\n1   1   5     2.5\n2   2  10    20.0\n3   3  15    67.5\n4   4  20   160.0\n5   5  25   312.5\n6   6  30   540.0\n7   7  35   857.5\n8   8  40  1280.0\n9   9  45  1822.5\n10 10  50  2500.0\n11 11  55  3327.5\n12 12  60  4320.0\n13 13  65  5492.5\n14 14  70  6860.0\n15 15  75  8437.5\n16 16  80 10240.0\n17 17  85 12282.5\n18 18  90 14580.0\n19 19  95 17147.5\n20 20 100 20000.0\n\n\nSe for utilizado o operador :, serão selecionadas todas as colunas entre o intervalo especificado, por exemplo:\n\ndf3 &lt;- df %&gt;% \n  select(B:C)\ndf3\n\n     B   D       C\n1    5   1     2.5\n2   10   4    20.0\n3   15   9    67.5\n4   20  16   160.0\n5   25  25   312.5\n6   30  36   540.0\n7   35  49   857.5\n8   40  64  1280.0\n9   45  81  1822.5\n10  50 100  2500.0\n11  55 121  3327.5\n12  60 144  4320.0\n13  65 169  5492.5\n14  70 196  6860.0\n15  75 225  8437.5\n16  80 256 10240.0\n17  85 289 12282.5\n18  90 324 14580.0\n19  95 361 17147.5\n20 100 400 20000.0\n\n\n\n\n\nEssa função ordena as linhas de um data frame em função dos valores das colunas selecionadas. Por exemlo:\n\ndf2 %&gt;% \n  arrange(A,C)\n\n    A   B       C\n1   1   5     2.5\n2   2  10    20.0\n3   3  15    67.5\n4   4  20   160.0\n5   5  25   312.5\n6   6  30   540.0\n7   7  35   857.5\n8   8  40  1280.0\n9   9  45  1822.5\n10 10  50  2500.0\n11 11  55  3327.5\n12 12  60  4320.0\n13 13  65  5492.5\n14 14  70  6860.0\n15 15  75  8437.5\n16 16  80 10240.0\n17 17  85 12282.5\n18 18  90 14580.0\n19 19  95 17147.5\n20 20 100 20000.0\n\n\nOu em ordem decrescente, com o argumento desc:\n\ndf2 %&gt;% \n  arrange(desc(A))\n\n    A   B       C\n1  20 100 20000.0\n2  19  95 17147.5\n3  18  90 14580.0\n4  17  85 12282.5\n5  16  80 10240.0\n6  15  75  8437.5\n7  14  70  6860.0\n8  13  65  5492.5\n9  12  60  4320.0\n10 11  55  3327.5\n11 10  50  2500.0\n12  9  45  1822.5\n13  8  40  1280.0\n14  7  35   857.5\n15  6  30   540.0\n16  5  25   312.5\n17  4  20   160.0\n18  3  15    67.5\n19  2  10    20.0\n20  1   5     2.5\n\n\n\n\n\nCom essa função é possível filtrar linhas do data frame que satisfaçam uma condição específica. Por exemplo:\n\ndf4 &lt;- df2 %&gt;% \n  filter(A &gt;= 5)\ndf4\n\n    A   B       C\n1   5  25   312.5\n2   6  30   540.0\n3   7  35   857.5\n4   8  40  1280.0\n5   9  45  1822.5\n6  10  50  2500.0\n7  11  55  3327.5\n8  12  60  4320.0\n9  13  65  5492.5\n10 14  70  6860.0\n11 15  75  8437.5\n12 16  80 10240.0\n13 17  85 12282.5\n14 18  90 14580.0\n15 19  95 17147.5\n16 20 100 20000.0\n\ndf5 &lt;- df2 %&gt;% \n  filter(A &lt; 5)\ndf5\n\n  A  B     C\n1 1  5   2.5\n2 2 10  20.0\n3 3 15  67.5\n4 4 20 160.0\n\ndf6 &lt;- df2 %&gt;% \n  filter(A == 5)\ndf6\n\n  A  B     C\n1 5 25 312.5\n\n\n\n\n\nCom essa função é possível selecionar uma coluna de interesse e obter medidas estatísticas dela. Com isso é criado um novo data frame as medidas selecionadas. Alguns exemplos:\n\nsumm &lt;- df2 %&gt;% \n  summarise(media = mean (A),\n            mediana = median(A),\n            sd = sd(A),\n            min = min(A),\n            max = max(A))\nsumm\n\n  media mediana      sd min max\n1  10.5    10.5 5.91608   1  20",
    "crumbs": [
      "Home",
      "Aulas iniciais",
      "Aula 1 - Criação de projetos, documentos, conjunto de dados e manipulações"
    ]
  },
  {
    "objectID": "Aula 1.html#criação-do-projeto",
    "href": "Aula 1.html#criação-do-projeto",
    "title": "Aula 1 - Criação de projetos, documentos, conjunto de dados e manipulações",
    "section": "",
    "text": "Inicialmente, será criado um projeto, onde serão mantidos todos os arquivos da disciplina. Para isso, bastar clicar em:\n &gt; “File”\n  &gt; “New Project…”\n   &gt; “New Directory”\n    &gt; “New Project”.\n     Nessa parte, é dado um nome ao projeto e escolhida a pasta em que ele será mantido. Feito isso, prosseguimos, clicando em “Create Project”.",
    "crumbs": [
      "Home",
      "Aulas iniciais",
      "Aula 1 - Criação de projetos, documentos, conjunto de dados e manipulações"
    ]
  },
  {
    "objectID": "Aula 1.html#criação-dos-scripts-e-documentos",
    "href": "Aula 1.html#criação-dos-scripts-e-documentos",
    "title": "Aula 1 - Criação de projetos, documentos, conjunto de dados e manipulações",
    "section": "",
    "text": "O script é o local onde são desenvolvidos e salvos os códigos. Para criar um novo script no RStudio, clique em:\n &gt; “File”\n  &gt; “New File”\n   &gt; “R Script”\n\n\n\n\nAo longo da disciplina, as atividades desenvolvidas serão salvas em documentos. O objetivo é permitir que os códigos desenvolvidos, as análises realizadas e os resultados obtidos, junto com as interpretações e comentários, sejam mantidos em um mesmo arquivo (documento), facilitando o acesso e entendimento do que foi feito.\nOs formatos dos documentos que podem ser utilizados são “R Markdown” (.rmd) e “Quarto document” (.qmd). Daremos preferência ao último.\nPortanto, para criar um novo documento em “.qmd”, seguiremos o seguinte caminho:\n &gt; “File”\n  &gt; “New File”\n   &gt; “Quarto document…”\n    Nessa janela, será dado um título ao arquivo, o nome do autor e em seguida, seleciona-se “Create”.\nO novo documento será salvo na pasta do projeto, criado anteriormente.",
    "crumbs": [
      "Home",
      "Aulas iniciais",
      "Aula 1 - Criação de projetos, documentos, conjunto de dados e manipulações"
    ]
  },
  {
    "objectID": "Aula 1.html#instalando-e-carregando-pacotes",
    "href": "Aula 1.html#instalando-e-carregando-pacotes",
    "title": "Aula 1 - Criação de projetos, documentos, conjunto de dados e manipulações",
    "section": "",
    "text": "Os pacotes são fundamentais para o funcionamento do RStudio, pois contém funções que serão utilizadas em várias análises no decorrer da disciplina.\nUm pacote pode ser instalado manualmente, clicando em:\n &gt; “Packages”\n  &gt; “Install”\n    &gt; Na linha “Packages”, digite o nome do pacote de interesse, por exemplo, “Agricolae”.\n    &gt; Em sequência, clique em “Install”\nOutra opção, é realizar a instalação com uma fórmula, como segue:\n\ninstall.packages(\"ggplot2\")\n\nApós a instalação, é preciso carregar o pacote, para isso:\n\nlibrary(ggplot2)",
    "crumbs": [
      "Home",
      "Aulas iniciais",
      "Aula 1 - Criação de projetos, documentos, conjunto de dados e manipulações"
    ]
  },
  {
    "objectID": "Aula 1.html#criando-vetores",
    "href": "Aula 1.html#criando-vetores",
    "title": "Aula 1 - Criação de projetos, documentos, conjunto de dados e manipulações",
    "section": "",
    "text": "Para trabalhar no R, algumas vezes devemos criar vetores, segue alguns exemplos simples de como o fazer:\n\nx &lt;- 5\nx\n\n[1] 5\n\n\nTambém é possível criar um vetor com um conjunto de valores:\n\nA &lt;- c(1:20)\nA\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20\n\n\nNo RStudio, também é possível realizar operações com os vetores criados, por exemplo\n\ny &lt;- x^2\ny\n\n[1] 25\n\n\n\nz &lt;- y-2*x\nz\n\n[1] 15\n\n\n\nB &lt;- A*5\nB\n\n [1]   5  10  15  20  25  30  35  40  45  50  55  60  65  70  75  80  85  90  95\n[20] 100",
    "crumbs": [
      "Home",
      "Aulas iniciais",
      "Aula 1 - Criação de projetos, documentos, conjunto de dados e manipulações"
    ]
  },
  {
    "objectID": "Aula 1.html#criando-data-frames",
    "href": "Aula 1.html#criando-data-frames",
    "title": "Aula 1 - Criação de projetos, documentos, conjunto de dados e manipulações",
    "section": "",
    "text": "Para criação de dataframes, é utilizada a função data.frame. Primeiros é dado um nome ao objeto (df), em sequência especificamos o que será colocado nele (os vetores A e B).\n\ndf &lt;- data.frame(A,B)\ndf\n\n    A   B\n1   1   5\n2   2  10\n3   3  15\n4   4  20\n5   5  25\n6   6  30\n7   7  35\n8   8  40\n9   9  45\n10 10  50\n11 11  55\n12 12  60\n13 13  65\n14 14  70\n15 15  75\n16 16  80\n17 17  85\n18 18  90\n19 19  95\n20 20 100",
    "crumbs": [
      "Home",
      "Aulas iniciais",
      "Aula 1 - Criação de projetos, documentos, conjunto de dados e manipulações"
    ]
  },
  {
    "objectID": "Aula 1.html#manipulação-de-dados",
    "href": "Aula 1.html#manipulação-de-dados",
    "title": "Aula 1 - Criação de projetos, documentos, conjunto de dados e manipulações",
    "section": "",
    "text": "Para manipulação de dados e/ou data frames, é possível adotar funções presentes no pacote dplyr. Alguns exemplos.\n\nlibrary(dplyr)\n\n\n\nEssa função é capaz de criar novas colunas em função das já existentes. Além disso, com ela é possível modificar e deletar colunas.\n\ndf &lt;- df %&gt;% \n  mutate(C = A*0.5,\n         D = A^2,\n         E = B*C*A)\ndf\n\n    A   B    C   D       E\n1   1   5  0.5   1     2.5\n2   2  10  1.0   4    20.0\n3   3  15  1.5   9    67.5\n4   4  20  2.0  16   160.0\n5   5  25  2.5  25   312.5\n6   6  30  3.0  36   540.0\n7   7  35  3.5  49   857.5\n8   8  40  4.0  64  1280.0\n9   9  45  4.5  81  1822.5\n10 10  50  5.0 100  2500.0\n11 11  55  5.5 121  3327.5\n12 12  60  6.0 144  4320.0\n13 13  65  6.5 169  5492.5\n14 14  70  7.0 196  6860.0\n15 15  75  7.5 225  8437.5\n16 16  80  8.0 256 10240.0\n17 17  85  8.5 289 12282.5\n18 18  90  9.0 324 14580.0\n19 19  95  9.5 361 17147.5\n20 20 100 10.0 400 20000.0\n\n\nPara deletar colunas:\n\ndf &lt;- df %&gt;% \n  mutate(C = NULL)\ndf\n\n    A   B   D       E\n1   1   5   1     2.5\n2   2  10   4    20.0\n3   3  15   9    67.5\n4   4  20  16   160.0\n5   5  25  25   312.5\n6   6  30  36   540.0\n7   7  35  49   857.5\n8   8  40  64  1280.0\n9   9  45  81  1822.5\n10 10  50 100  2500.0\n11 11  55 121  3327.5\n12 12  60 144  4320.0\n13 13  65 169  5492.5\n14 14  70 196  6860.0\n15 15  75 225  8437.5\n16 16  80 256 10240.0\n17 17  85 289 12282.5\n18 18  90 324 14580.0\n19 19  95 361 17147.5\n20 20 100 400 20000.0\n\n\n\n\n\nEssa função permite alterar o nome atribuído as colunas, usando a seguinte ordem: nome novo = nome antigo. Por exemplo:\n\ndf &lt;- df %&gt;% \n  rename(C = E)\ndf\n\n    A   B   D       C\n1   1   5   1     2.5\n2   2  10   4    20.0\n3   3  15   9    67.5\n4   4  20  16   160.0\n5   5  25  25   312.5\n6   6  30  36   540.0\n7   7  35  49   857.5\n8   8  40  64  1280.0\n9   9  45  81  1822.5\n10 10  50 100  2500.0\n11 11  55 121  3327.5\n12 12  60 144  4320.0\n13 13  65 169  5492.5\n14 14  70 196  6860.0\n15 15  75 225  8437.5\n16 16  80 256 10240.0\n17 17  85 289 12282.5\n18 18  90 324 14580.0\n19 19  95 361 17147.5\n20 20 100 400 20000.0\n\n\n\n\n\nCom essa função, é possível criar um novo data frame, selecionado colunas de um data frame já existente, por exemplo:\n\ndf2 &lt;- df %&gt;% \n  select(A, B, C)\ndf2\n\n    A   B       C\n1   1   5     2.5\n2   2  10    20.0\n3   3  15    67.5\n4   4  20   160.0\n5   5  25   312.5\n6   6  30   540.0\n7   7  35   857.5\n8   8  40  1280.0\n9   9  45  1822.5\n10 10  50  2500.0\n11 11  55  3327.5\n12 12  60  4320.0\n13 13  65  5492.5\n14 14  70  6860.0\n15 15  75  8437.5\n16 16  80 10240.0\n17 17  85 12282.5\n18 18  90 14580.0\n19 19  95 17147.5\n20 20 100 20000.0\n\n\nSe for utilizado o operador :, serão selecionadas todas as colunas entre o intervalo especificado, por exemplo:\n\ndf3 &lt;- df %&gt;% \n  select(B:C)\ndf3\n\n     B   D       C\n1    5   1     2.5\n2   10   4    20.0\n3   15   9    67.5\n4   20  16   160.0\n5   25  25   312.5\n6   30  36   540.0\n7   35  49   857.5\n8   40  64  1280.0\n9   45  81  1822.5\n10  50 100  2500.0\n11  55 121  3327.5\n12  60 144  4320.0\n13  65 169  5492.5\n14  70 196  6860.0\n15  75 225  8437.5\n16  80 256 10240.0\n17  85 289 12282.5\n18  90 324 14580.0\n19  95 361 17147.5\n20 100 400 20000.0\n\n\n\n\n\nEssa função ordena as linhas de um data frame em função dos valores das colunas selecionadas. Por exemlo:\n\ndf2 %&gt;% \n  arrange(A,C)\n\n    A   B       C\n1   1   5     2.5\n2   2  10    20.0\n3   3  15    67.5\n4   4  20   160.0\n5   5  25   312.5\n6   6  30   540.0\n7   7  35   857.5\n8   8  40  1280.0\n9   9  45  1822.5\n10 10  50  2500.0\n11 11  55  3327.5\n12 12  60  4320.0\n13 13  65  5492.5\n14 14  70  6860.0\n15 15  75  8437.5\n16 16  80 10240.0\n17 17  85 12282.5\n18 18  90 14580.0\n19 19  95 17147.5\n20 20 100 20000.0\n\n\nOu em ordem decrescente, com o argumento desc:\n\ndf2 %&gt;% \n  arrange(desc(A))\n\n    A   B       C\n1  20 100 20000.0\n2  19  95 17147.5\n3  18  90 14580.0\n4  17  85 12282.5\n5  16  80 10240.0\n6  15  75  8437.5\n7  14  70  6860.0\n8  13  65  5492.5\n9  12  60  4320.0\n10 11  55  3327.5\n11 10  50  2500.0\n12  9  45  1822.5\n13  8  40  1280.0\n14  7  35   857.5\n15  6  30   540.0\n16  5  25   312.5\n17  4  20   160.0\n18  3  15    67.5\n19  2  10    20.0\n20  1   5     2.5\n\n\n\n\n\nCom essa função é possível filtrar linhas do data frame que satisfaçam uma condição específica. Por exemplo:\n\ndf4 &lt;- df2 %&gt;% \n  filter(A &gt;= 5)\ndf4\n\n    A   B       C\n1   5  25   312.5\n2   6  30   540.0\n3   7  35   857.5\n4   8  40  1280.0\n5   9  45  1822.5\n6  10  50  2500.0\n7  11  55  3327.5\n8  12  60  4320.0\n9  13  65  5492.5\n10 14  70  6860.0\n11 15  75  8437.5\n12 16  80 10240.0\n13 17  85 12282.5\n14 18  90 14580.0\n15 19  95 17147.5\n16 20 100 20000.0\n\ndf5 &lt;- df2 %&gt;% \n  filter(A &lt; 5)\ndf5\n\n  A  B     C\n1 1  5   2.5\n2 2 10  20.0\n3 3 15  67.5\n4 4 20 160.0\n\ndf6 &lt;- df2 %&gt;% \n  filter(A == 5)\ndf6\n\n  A  B     C\n1 5 25 312.5\n\n\n\n\n\nCom essa função é possível selecionar uma coluna de interesse e obter medidas estatísticas dela. Com isso é criado um novo data frame as medidas selecionadas. Alguns exemplos:\n\nsumm &lt;- df2 %&gt;% \n  summarise(media = mean (A),\n            mediana = median(A),\n            sd = sd(A),\n            min = min(A),\n            max = max(A))\nsumm\n\n  media mediana      sd min max\n1  10.5    10.5 5.91608   1  20",
    "crumbs": [
      "Home",
      "Aulas iniciais",
      "Aula 1 - Criação de projetos, documentos, conjunto de dados e manipulações"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Site criado para hospedar os dados gerados ao longo da disciplina FIP 606 - Análise e Visualização de Dados em Fitopatologia."
  },
  {
    "objectID": "Aula 10.html",
    "href": "Aula 10.html",
    "title": "Aula 10",
    "section": "",
    "text": "library(gsheet)\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(AgroR)\n\n\n\n\ncorr &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=373270992\")\n\n\n\n\n\nConsiderando o software “Assess” como o padrão, serão feitos gráficos de correlação entre ele e os outros softwares, “LeafDoctor” e “ImageJ”. O objetivo é verificar se os métodos possuem alguma correlação com o “Assess” e se essa correlação é positiva ou negativa.\n\ng1 &lt;- corr %&gt;% \n  ggplot(aes(Assess, LeafDoctor))+\n  geom_point()+\n  geom_smooth(method = \"lm\")\n\ng1\n\n\n\n\n\n\n\n\n\ng2 &lt;- corr %&gt;% \n  ggplot(aes(Assess, ImageJ))+\n  geom_point()+\n  geom_smooth(method = \"lm\")\n\ng2\n\n\n\n\n\n\n\n\nOs gráficos acima demonstram que os softwares avaliados possuem correlação positiva com o software “Assess”.\n\n\n\nSerá construído um boxplot para verificar a variabilidade dos dados em função do método (software).\n\ng3 &lt;- corr %&gt;%\n  pivot_longer(3:5, names_to = \"method\",\n               values_to = \"value\") %&gt;% \n  ggplot(aes(method , value))+\n  geom_boxplot()\n\ng3\n\n\n\n\n\n\n\n\nCom o pacote patchwork será feito um plot contendo os três gráficos gerados anteriormente:\n\ng3 + (g1/g2)\n\n\n\n\n\n\n\n\n\n\n\n\nO coeficiente de correlação (ou correlação de Pearson) varia entre -1 e +1. Se o valor for negativo, há correlação negativa; caso seja positivo, a correlação será positiva. Além disso, quanto mais próximo às extremidades (-1 ou +1), mais forte será a correlação.\nUma opção para obter os coeficientes de correlação (r) é adotar a função cor.test (nativa do R):\n\ncor.test(corr$Assess, corr$LeafDoctor)\n\n\n    Pearson's product-moment correlation\n\ndata:  corr$Assess and corr$LeafDoctor\nt = 31.119, df = 68, p-value &lt; 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.9466882 0.9792005\nsample estimates:\n      cor \n0.9666367 \n\n\n\ncor.test(corr$Assess, corr$ImageJ)\n\n\n    Pearson's product-moment correlation\n\ndata:  corr$Assess and corr$ImageJ\nt = 38.383, df = 68, p-value &lt; 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.9642331 0.9861219\nsample estimates:\n      cor \n0.9776918 \n\n\nPelo coeficientes obtidos, é possível dizer que os softwares possuem correlação positiva e forte, pois os valores\n\n\nCom AgroR:\nAntes é preciso criar um objeto com os coeficientes de correlação.\n\ncorr %&gt;% \n  select(3:5) %&gt;%\n  corgraph()\n\n        Var1       Var2       cor            p\n2 LeafDoctor     Assess 0.9666367 5.972544e-42\n3     ImageJ     Assess 0.9776918 8.143613e-48\n6     ImageJ LeafDoctor 0.9797478 3.144091e-49\n\n\n\n\n\n\n\n\n#ou#\n\n\ncorr2 &lt;- corr %&gt;%\n  select(3:5)\n\ncorgraph(corr2)\n\n        Var1       Var2       cor            p\n2 LeafDoctor     Assess 0.9666367 5.972544e-42\n3     ImageJ     Assess 0.9776918 8.143613e-48\n6     ImageJ LeafDoctor 0.9797478 3.144091e-49\n\n\n\n\n\n\n\n\n\nCom corrplot:\n\nlibrary(corrplot)\n\ncorr2_1 &lt;- cor(corr2)\ncorrplot(corr2_1, method = \"square\", type = \"upper\")\n\n\n\n\n\n\n\n\nAlterando alguns parâmetros na função (conferir o help, pois há outras variações possíveis):\n\nO argumento diag = FALSE remove a comparação dentro de um mesmo método, por exemplo, Assess com Assess.\n\n\ncorrplot(corr2_1, method = \"number\", type = \"upper\", diag = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\nUm outro exemplo de correlação, com o conjunto de dados de aulas passadas.\n\ncampo &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=866852711\")\n\ncampo2 &lt;- campo |&gt; \n  dplyr::select(DFC, FER, PROD)\n\nCom corgraph\n\ncorgraph(campo2)\n\n  Var1 Var2        cor            p\n2  FER  DFC  0.9316978 9.864101e-15\n3 PROD  DFC -0.6928161 1.110652e-05\n6 PROD  FER -0.6258321 1.277444e-04\n\n\n\n\n\n\n\n\n\nCom corrplot\n\ncampo2_1 &lt;- cor(campo2)\ncampo2_1 %&gt;% corrplot(method = \"number\", type = \"lower\", diag = FALSE)\n\n\n\n\n\n\n\n\n\n\n\ncor.test(campo2$PROD, campo2$DFC)\n\n\n    Pearson's product-moment correlation\n\ndata:  campo2$PROD and campo2$DFC\nt = -5.2623, df = 30, p-value = 1.111e-05\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.8388581 -0.4537361\nsample estimates:\n       cor \n-0.6928161 \n\ncor.test(campo2$PROD, campo2$FER)\n\n\n    Pearson's product-moment correlation\n\ndata:  campo2$PROD and campo2$FER\nt = -4.3949, df = 30, p-value = 0.0001277\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.7999565 -0.3544981\nsample estimates:\n       cor \n-0.6258321 \n\n\nAvalia-se os intervalos de confiança obtidos (IC da correlação entre PROD e DFC vs. IC da correlação entre PROD e FER) e caso não haja sobreposição de intervalos, as correlações diferem estatisticamente.\n____\n\n\n\n\n\n\nestande &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=401662555\")\n\nNa aula anterior, foi visto que o ensaio 2 não apresentava uma tendência linear.\nEsse ensaio será utilizado para exemplificar uma regressão linear de segunda ordem.\n\nexp2 &lt;- estande %&gt;% \n  filter(exp == 2)\n\n\nexp2 %&gt;% \n  ggplot(aes(trat, nplants))+\n  geom_point()+\n  ylim(0,100)+\n  geom_smooth(method = \"lm\",\n              se = F,\n              color = \"green\",\n              formula = y ~ poly(x,2))+\n  geom_smooth(method = \"lm\",\n              se = F,\n              color = \"red\")\n\n\n\n\n\n\n\n\nEm vermelho, a linha que indica o modelo linear de primeira ordem. Em verde, o modelo linear de segunda ordem.\n\n\n\nlm2 &lt;- lm(nplants ~ trat,\n          data = exp2)\n\nsummary(lm2)\n\n\nCall:\nlm(formula = nplants ~ trat, data = exp2)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-25.7816  -7.7150   0.5653   8.1929  19.2184 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  60.9857     3.6304  16.798 4.93e-14 ***\ntrat         -0.7007     0.1605  -4.365 0.000247 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 12.95 on 22 degrees of freedom\nMultiple R-squared:  0.4641,    Adjusted R-squared:  0.4398 \nF-statistic: 19.05 on 1 and 22 DF,  p-value: 0.0002473\n\n\nComo o resultado demonstra, para o modelo linear, o coeficiente de determinação é baixo (R2 = 0.43) , logo boa parte da variação dos dados não são explicados por esse modelo.\n\n\n\nPara construir o modelo quadrático é preciso acrescentar uma coluna ao conjunto de dados, onde a varíavel independente (nesse caso, trat) será elevada ao quadrado. Isso é necessário para obtermos um segundo coeficiente no momento de criar o modelo.\n\nexp2$trat2 &lt;- exp2$trat^2\n\n\nlm2_quad &lt;- lm(nplants ~ trat + trat2,\n               data = exp2)\nsummary(lm2_quad)\n\n\nCall:\nlm(formula = nplants ~ trat + trat2, data = exp2)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-25.439  -6.019   1.789   8.016  19.561 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 66.30156    4.42097  14.997 1.08e-12 ***\ntrat        -1.77720    0.58467  -3.040  0.00623 ** \ntrat2        0.02223    0.01166   1.906  0.07036 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 12.24 on 21 degrees of freedom\nMultiple R-squared:  0.5432,    Adjusted R-squared:  0.4997 \nF-statistic: 12.49 on 2 and 21 DF,  p-value: 0.0002675\n\n\nCom a função polynomial (AgroR):\n\nwith(exp2, polynomial(trat, nplants, grau = 2))\n\n\n----------------------------------------------------\nRegression Models\n----------------------------------------------------\n               Estimate Std. Error   t value     Pr(&gt;|t|)\n(Intercept) 66.30156250 4.42096799 14.997069 1.079972e-12\ntrat        -1.77719814 0.58467380 -3.039640 6.230050e-03\nI(trat^2)    0.02222876 0.01165948  1.906496 7.036247e-02\n\n----------------------------------------------------\nDeviations from regression\n----------------------------------------------------\n          Df       SSq       MSQ         F      p-value\nLinear     1 3196.2031 3196.2031 21.823293 0.0001899378\nQuadratic  1  544.5029  544.5029  3.717801 0.0697619482\nDeviation  3  509.6690  169.8897  1.159986 0.3523240106\nResidual  18 2636.2500  146.4583                       \n\n\n[[1]]\n\n\n\n\n\n\n\n\n\n\n\n\n\nAIC(lm2)\n\n[1] 194.9597\n\nAIC(lm2_quad)\n\n[1] 193.1284\n\n\nPelo teste de AIC, em comparação ao modelo linear, o modelo quadrático explica melhor a variação dos dados, pois AIC(lm2_quad) &lt; AIC(lm2).\n\n\n\nwith(exp2, polynomial(trat, nplants, grau = 3))\n\n\n----------------------------------------------------\nRegression Models\n----------------------------------------------------\n                Estimate  Std. Error   t value     Pr(&gt;|t|)\n(Intercept) 70.265143802 5.300440019 13.256474 2.295186e-11\ntrat        -3.609380523 1.514625525 -2.383018 2.720299e-02\nI(trat^2)    0.140522077 0.091192577  1.540938 1.390058e-01\nI(trat^3)   -0.001712445 0.001309648 -1.307561 2.058546e-01\n\n----------------------------------------------------\nDeviations from regression\n----------------------------------------------------\n          Df       SSq       MSQ          F      p-value\nLinear     1 3196.2031 3196.2031 21.8232929 0.0001899378\nQuadratic  1  544.5029  544.5029  3.7178008 0.0697619482\nCubic      1  247.7520  247.7520  1.6916208 0.2097934169\nDeviation  2  261.9170  130.9585  0.8941691 0.4263523326\nResidual  18 2636.2500  146.4583                        \n\n\n[[1]]\n\n\n\n\n\n\n\n\n\nApesar do polinômio de grau 3 explicar melhor os dados, o modelo não possui explicação biológica plausível (do estande de plantas aumentar em função do aumento do inóculo para depois decrescer).\n\n\n\n\n\nAplicação na fitopatologia, em curvas de EC50.\n\nfung &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=465348652\")\n\nCálculo da média de germinação em função do isolado.\n\nfung2 &lt;- fung %&gt;% \n  group_by(code, dose) %&gt;% \n  summarise(mean_germ = mean(germination))\n\n\nVisualização da média de germinação com gráfico de pontos\n\nfung2 %&gt;% \n  ggplot(aes(dose, mean_germ))+\n  geom_point()+\n  facet_wrap(~ code)\n\n\n\n\n\n\n\n\n\n\nPara modelar a EC50 será utilizado o pacote drc, com a função drm.\nAntes, é preciso criar um novo objeto somente com os dados do isolado selecionado (ex.: FGT05). Em seguida, definimos na função drm que a germinação média será modela em função da dose, qual o conjunto de dados (data = FGT05) e qual a função utilizada (no caso, fct = LL.3()).\n\nlibrary(drc)\n\nFGT05 &lt;- fung2 %&gt;% \n  filter(code ==\"FGT05\")\n\ndrc_fgt05 &lt;- drm(mean_germ ~ dose,\n                 data = FGT05,\n                 fct = LL.3())\n\nsummary(drc_fgt05)\n\n\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0 (3 parms)\n\nParameter estimates:\n\n               Estimate Std. Error t-value   p-value    \nb:(Intercept)  0.769933   0.198566  3.8775 0.0303750 *  \nd:(Intercept) 44.924753   3.261699 13.7734 0.0008283 ***\ne:(Intercept)  0.044839   0.019291  2.3243 0.1026764    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 3.253867 (3 degrees of freedom)\n\nAIC(drc_fgt05)\n\n[1] 35.02651\n\nplot(drc_fgt05)\n\n\n\n\n\n\n\n\nÉ importante definir a função para comparar os modelos e selecionar aquele mais simples (com menor AIC).\n\n\n\nSerá utilizada a função ED pacote (drc).\nSeleciona-se o objeto, o valor da varíavel resposta (50), e o tipo de intervalo de confiança que será apresentado.\n\nED(drc_fgt05, 50, interval = \"delta\")\n\n\nEstimated effective doses\n\n        Estimate Std. Error     Lower     Upper\ne:1:50  0.044839   0.019291 -0.016554  0.106231\n\n\nNo caso, a dose que inibe 50% da germinação de conídios foi estimada em 0.04, com -0.01 &lt; IC &lt; 0.10.\n\n\n\nI_165 &lt;- fung2 %&gt;% \n  filter(code ==\"165\")\n\ndrc_165 &lt;- drm(mean_germ ~ dose,\n                 data = I_165,\n                 fct = LL.3())\n\nsummary(drc_165)\n\n\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0 (3 parms)\n\nParameter estimates:\n\n              Estimate Std. Error t-value   p-value    \nb:(Intercept)  1.21560    0.26679  4.5564 0.0198145 *  \nd:(Intercept) 36.14322    1.97554 18.2954 0.0003563 ***\ne:(Intercept)  0.55840    0.11420  4.8898 0.0163598 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 2.436519 (3 degrees of freedom)\n\nAIC(drc_165)\n\n[1] 31.55522\n\nplot(drc_165)\n\n\n\n\n\n\n\nED(drc_165,50, interval = \"delta\")\n\n\nEstimated effective doses\n\n       Estimate Std. Error   Lower   Upper\ne:1:50  0.55840    0.11420 0.19498 0.92182\n\n\n\nI_186 &lt;- fung2 %&gt;% \n  filter(code ==\"186\")\n\ndrc_186 &lt;- drm(mean_germ ~ dose,\n                 data = I_186,\n                 fct = LL.3())\n\nsummary(drc_186)\n\n\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0 (3 parms)\n\nParameter estimates:\n\n               Estimate Std. Error t-value   p-value    \nb:(Intercept)  4.997636   0.542650  9.2097  0.002708 ** \nd:(Intercept) 48.750109   0.721642 67.5545 7.148e-06 ***\ne:(Intercept)  0.579757   0.013332 43.4853 2.677e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 1.020525 (3 degrees of freedom)\n\nAIC(drc_186)\n\n[1] 21.11219\n\nplot(drc_186)\n\n\n\n\n\n\n\nED(drc_186, 50, interval = \"delta\")\n\n\nEstimated effective doses\n\n       Estimate Std. Error    Lower    Upper\ne:1:50 0.579757   0.013332 0.537328 0.622187\n\n\n\n\n\n\nPelo método anterior, é preciso modelar o EC50 individualmente, o que pode ser trabalhoso, dependendo do número de amostras. Assim, o pacote ec50estimator é útil nessa situações, pois permite modelar, calcular a EC50 e o IC de todos os tratamento de uma só vez.\n\nlibrary(ec50estimator)\n\ndf_ec50 &lt;- estimate_EC50(mean_germ~dose,\n                         data = fung2,\n                         isolate_col = \"code\",\n                         interval = \"delta\",\n                         fct = drc::LL.3())\nview(df_ec50)\n\nlibrary(DT)\ndatatable(df_ec50)\n\n\n\n\n\nProblema, não é possível selecionar a função de cada modelo para melhor se adequar a cada tratamento.\nGráfico com as doses de EC50 e intervalo de confiança:\n\ndf_ec50 %&gt;% \n  ggplot(aes(reorder(ID, Estimate), Estimate))+\n  geom_point()+\n  geom_errorbar(aes(ymin = Lower,\n                    ymax = Upper),\n                width = 0.1)+\n  ylim (0, 1.2)+\n  coord_flip()\n\n\n\n\n\n\n\n\nArgumento reorder(ID, Estimate), Estimate , utilizado para ordenar os tratamentos em função da resposta (ordem crescente).",
    "crumbs": [
      "Home",
      "Análises",
      "Aula 10"
    ]
  },
  {
    "objectID": "Aula 10.html#análise-de-correlação",
    "href": "Aula 10.html#análise-de-correlação",
    "title": "Aula 10",
    "section": "",
    "text": "corr &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=373270992\")\n\n\n\n\n\nConsiderando o software “Assess” como o padrão, serão feitos gráficos de correlação entre ele e os outros softwares, “LeafDoctor” e “ImageJ”. O objetivo é verificar se os métodos possuem alguma correlação com o “Assess” e se essa correlação é positiva ou negativa.\n\ng1 &lt;- corr %&gt;% \n  ggplot(aes(Assess, LeafDoctor))+\n  geom_point()+\n  geom_smooth(method = \"lm\")\n\ng1\n\n\n\n\n\n\n\n\n\ng2 &lt;- corr %&gt;% \n  ggplot(aes(Assess, ImageJ))+\n  geom_point()+\n  geom_smooth(method = \"lm\")\n\ng2\n\n\n\n\n\n\n\n\nOs gráficos acima demonstram que os softwares avaliados possuem correlação positiva com o software “Assess”.\n\n\n\nSerá construído um boxplot para verificar a variabilidade dos dados em função do método (software).\n\ng3 &lt;- corr %&gt;%\n  pivot_longer(3:5, names_to = \"method\",\n               values_to = \"value\") %&gt;% \n  ggplot(aes(method , value))+\n  geom_boxplot()\n\ng3\n\n\n\n\n\n\n\n\nCom o pacote patchwork será feito um plot contendo os três gráficos gerados anteriormente:\n\ng3 + (g1/g2)\n\n\n\n\n\n\n\n\n\n\n\n\nO coeficiente de correlação (ou correlação de Pearson) varia entre -1 e +1. Se o valor for negativo, há correlação negativa; caso seja positivo, a correlação será positiva. Além disso, quanto mais próximo às extremidades (-1 ou +1), mais forte será a correlação.\nUma opção para obter os coeficientes de correlação (r) é adotar a função cor.test (nativa do R):\n\ncor.test(corr$Assess, corr$LeafDoctor)\n\n\n    Pearson's product-moment correlation\n\ndata:  corr$Assess and corr$LeafDoctor\nt = 31.119, df = 68, p-value &lt; 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.9466882 0.9792005\nsample estimates:\n      cor \n0.9666367 \n\n\n\ncor.test(corr$Assess, corr$ImageJ)\n\n\n    Pearson's product-moment correlation\n\ndata:  corr$Assess and corr$ImageJ\nt = 38.383, df = 68, p-value &lt; 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.9642331 0.9861219\nsample estimates:\n      cor \n0.9776918 \n\n\nPelo coeficientes obtidos, é possível dizer que os softwares possuem correlação positiva e forte, pois os valores\n\n\nCom AgroR:\nAntes é preciso criar um objeto com os coeficientes de correlação.\n\ncorr %&gt;% \n  select(3:5) %&gt;%\n  corgraph()\n\n        Var1       Var2       cor            p\n2 LeafDoctor     Assess 0.9666367 5.972544e-42\n3     ImageJ     Assess 0.9776918 8.143613e-48\n6     ImageJ LeafDoctor 0.9797478 3.144091e-49\n\n\n\n\n\n\n\n\n#ou#\n\n\ncorr2 &lt;- corr %&gt;%\n  select(3:5)\n\ncorgraph(corr2)\n\n        Var1       Var2       cor            p\n2 LeafDoctor     Assess 0.9666367 5.972544e-42\n3     ImageJ     Assess 0.9776918 8.143613e-48\n6     ImageJ LeafDoctor 0.9797478 3.144091e-49\n\n\n\n\n\n\n\n\n\nCom corrplot:\n\nlibrary(corrplot)\n\ncorr2_1 &lt;- cor(corr2)\ncorrplot(corr2_1, method = \"square\", type = \"upper\")\n\n\n\n\n\n\n\n\nAlterando alguns parâmetros na função (conferir o help, pois há outras variações possíveis):\n\nO argumento diag = FALSE remove a comparação dentro de um mesmo método, por exemplo, Assess com Assess.\n\n\ncorrplot(corr2_1, method = \"number\", type = \"upper\", diag = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\nUm outro exemplo de correlação, com o conjunto de dados de aulas passadas.\n\ncampo &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=866852711\")\n\ncampo2 &lt;- campo |&gt; \n  dplyr::select(DFC, FER, PROD)\n\nCom corgraph\n\ncorgraph(campo2)\n\n  Var1 Var2        cor            p\n2  FER  DFC  0.9316978 9.864101e-15\n3 PROD  DFC -0.6928161 1.110652e-05\n6 PROD  FER -0.6258321 1.277444e-04\n\n\n\n\n\n\n\n\n\nCom corrplot\n\ncampo2_1 &lt;- cor(campo2)\ncampo2_1 %&gt;% corrplot(method = \"number\", type = \"lower\", diag = FALSE)\n\n\n\n\n\n\n\n\n\n\n\ncor.test(campo2$PROD, campo2$DFC)\n\n\n    Pearson's product-moment correlation\n\ndata:  campo2$PROD and campo2$DFC\nt = -5.2623, df = 30, p-value = 1.111e-05\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.8388581 -0.4537361\nsample estimates:\n       cor \n-0.6928161 \n\ncor.test(campo2$PROD, campo2$FER)\n\n\n    Pearson's product-moment correlation\n\ndata:  campo2$PROD and campo2$FER\nt = -4.3949, df = 30, p-value = 0.0001277\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.7999565 -0.3544981\nsample estimates:\n       cor \n-0.6258321 \n\n\nAvalia-se os intervalos de confiança obtidos (IC da correlação entre PROD e DFC vs. IC da correlação entre PROD e FER) e caso não haja sobreposição de intervalos, as correlações diferem estatisticamente.\n____",
    "crumbs": [
      "Home",
      "Análises",
      "Aula 10"
    ]
  },
  {
    "objectID": "Aula 10.html#regressão-linear-de-segunda-ordem-quadrática",
    "href": "Aula 10.html#regressão-linear-de-segunda-ordem-quadrática",
    "title": "Aula 10",
    "section": "",
    "text": "estande &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=401662555\")\n\nNa aula anterior, foi visto que o ensaio 2 não apresentava uma tendência linear.\nEsse ensaio será utilizado para exemplificar uma regressão linear de segunda ordem.\n\nexp2 &lt;- estande %&gt;% \n  filter(exp == 2)\n\n\nexp2 %&gt;% \n  ggplot(aes(trat, nplants))+\n  geom_point()+\n  ylim(0,100)+\n  geom_smooth(method = \"lm\",\n              se = F,\n              color = \"green\",\n              formula = y ~ poly(x,2))+\n  geom_smooth(method = \"lm\",\n              se = F,\n              color = \"red\")\n\n\n\n\n\n\n\n\nEm vermelho, a linha que indica o modelo linear de primeira ordem. Em verde, o modelo linear de segunda ordem.\n\n\n\nlm2 &lt;- lm(nplants ~ trat,\n          data = exp2)\n\nsummary(lm2)\n\n\nCall:\nlm(formula = nplants ~ trat, data = exp2)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-25.7816  -7.7150   0.5653   8.1929  19.2184 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  60.9857     3.6304  16.798 4.93e-14 ***\ntrat         -0.7007     0.1605  -4.365 0.000247 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 12.95 on 22 degrees of freedom\nMultiple R-squared:  0.4641,    Adjusted R-squared:  0.4398 \nF-statistic: 19.05 on 1 and 22 DF,  p-value: 0.0002473\n\n\nComo o resultado demonstra, para o modelo linear, o coeficiente de determinação é baixo (R2 = 0.43) , logo boa parte da variação dos dados não são explicados por esse modelo.\n\n\n\nPara construir o modelo quadrático é preciso acrescentar uma coluna ao conjunto de dados, onde a varíavel independente (nesse caso, trat) será elevada ao quadrado. Isso é necessário para obtermos um segundo coeficiente no momento de criar o modelo.\n\nexp2$trat2 &lt;- exp2$trat^2\n\n\nlm2_quad &lt;- lm(nplants ~ trat + trat2,\n               data = exp2)\nsummary(lm2_quad)\n\n\nCall:\nlm(formula = nplants ~ trat + trat2, data = exp2)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-25.439  -6.019   1.789   8.016  19.561 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 66.30156    4.42097  14.997 1.08e-12 ***\ntrat        -1.77720    0.58467  -3.040  0.00623 ** \ntrat2        0.02223    0.01166   1.906  0.07036 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 12.24 on 21 degrees of freedom\nMultiple R-squared:  0.5432,    Adjusted R-squared:  0.4997 \nF-statistic: 12.49 on 2 and 21 DF,  p-value: 0.0002675\n\n\nCom a função polynomial (AgroR):\n\nwith(exp2, polynomial(trat, nplants, grau = 2))\n\n\n----------------------------------------------------\nRegression Models\n----------------------------------------------------\n               Estimate Std. Error   t value     Pr(&gt;|t|)\n(Intercept) 66.30156250 4.42096799 14.997069 1.079972e-12\ntrat        -1.77719814 0.58467380 -3.039640 6.230050e-03\nI(trat^2)    0.02222876 0.01165948  1.906496 7.036247e-02\n\n----------------------------------------------------\nDeviations from regression\n----------------------------------------------------\n          Df       SSq       MSQ         F      p-value\nLinear     1 3196.2031 3196.2031 21.823293 0.0001899378\nQuadratic  1  544.5029  544.5029  3.717801 0.0697619482\nDeviation  3  509.6690  169.8897  1.159986 0.3523240106\nResidual  18 2636.2500  146.4583                       \n\n\n[[1]]\n\n\n\n\n\n\n\n\n\n\n\n\n\nAIC(lm2)\n\n[1] 194.9597\n\nAIC(lm2_quad)\n\n[1] 193.1284\n\n\nPelo teste de AIC, em comparação ao modelo linear, o modelo quadrático explica melhor a variação dos dados, pois AIC(lm2_quad) &lt; AIC(lm2).\n\n\n\nwith(exp2, polynomial(trat, nplants, grau = 3))\n\n\n----------------------------------------------------\nRegression Models\n----------------------------------------------------\n                Estimate  Std. Error   t value     Pr(&gt;|t|)\n(Intercept) 70.265143802 5.300440019 13.256474 2.295186e-11\ntrat        -3.609380523 1.514625525 -2.383018 2.720299e-02\nI(trat^2)    0.140522077 0.091192577  1.540938 1.390058e-01\nI(trat^3)   -0.001712445 0.001309648 -1.307561 2.058546e-01\n\n----------------------------------------------------\nDeviations from regression\n----------------------------------------------------\n          Df       SSq       MSQ          F      p-value\nLinear     1 3196.2031 3196.2031 21.8232929 0.0001899378\nQuadratic  1  544.5029  544.5029  3.7178008 0.0697619482\nCubic      1  247.7520  247.7520  1.6916208 0.2097934169\nDeviation  2  261.9170  130.9585  0.8941691 0.4263523326\nResidual  18 2636.2500  146.4583                        \n\n\n[[1]]\n\n\n\n\n\n\n\n\n\nApesar do polinômio de grau 3 explicar melhor os dados, o modelo não possui explicação biológica plausível (do estande de plantas aumentar em função do aumento do inóculo para depois decrescer).",
    "crumbs": [
      "Home",
      "Análises",
      "Aula 10"
    ]
  },
  {
    "objectID": "Aula 10.html#modelo-nãolinear",
    "href": "Aula 10.html#modelo-nãolinear",
    "title": "Aula 10",
    "section": "",
    "text": "Aplicação na fitopatologia, em curvas de EC50.\n\nfung &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=465348652\")\n\nCálculo da média de germinação em função do isolado.\n\nfung2 &lt;- fung %&gt;% \n  group_by(code, dose) %&gt;% \n  summarise(mean_germ = mean(germination))\n\n\nVisualização da média de germinação com gráfico de pontos\n\nfung2 %&gt;% \n  ggplot(aes(dose, mean_germ))+\n  geom_point()+\n  facet_wrap(~ code)\n\n\n\n\n\n\n\n\n\n\nPara modelar a EC50 será utilizado o pacote drc, com a função drm.\nAntes, é preciso criar um novo objeto somente com os dados do isolado selecionado (ex.: FGT05). Em seguida, definimos na função drm que a germinação média será modela em função da dose, qual o conjunto de dados (data = FGT05) e qual a função utilizada (no caso, fct = LL.3()).\n\nlibrary(drc)\n\nFGT05 &lt;- fung2 %&gt;% \n  filter(code ==\"FGT05\")\n\ndrc_fgt05 &lt;- drm(mean_germ ~ dose,\n                 data = FGT05,\n                 fct = LL.3())\n\nsummary(drc_fgt05)\n\n\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0 (3 parms)\n\nParameter estimates:\n\n               Estimate Std. Error t-value   p-value    \nb:(Intercept)  0.769933   0.198566  3.8775 0.0303750 *  \nd:(Intercept) 44.924753   3.261699 13.7734 0.0008283 ***\ne:(Intercept)  0.044839   0.019291  2.3243 0.1026764    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 3.253867 (3 degrees of freedom)\n\nAIC(drc_fgt05)\n\n[1] 35.02651\n\nplot(drc_fgt05)\n\n\n\n\n\n\n\n\nÉ importante definir a função para comparar os modelos e selecionar aquele mais simples (com menor AIC).\n\n\n\nSerá utilizada a função ED pacote (drc).\nSeleciona-se o objeto, o valor da varíavel resposta (50), e o tipo de intervalo de confiança que será apresentado.\n\nED(drc_fgt05, 50, interval = \"delta\")\n\n\nEstimated effective doses\n\n        Estimate Std. Error     Lower     Upper\ne:1:50  0.044839   0.019291 -0.016554  0.106231\n\n\nNo caso, a dose que inibe 50% da germinação de conídios foi estimada em 0.04, com -0.01 &lt; IC &lt; 0.10.\n\n\n\nI_165 &lt;- fung2 %&gt;% \n  filter(code ==\"165\")\n\ndrc_165 &lt;- drm(mean_germ ~ dose,\n                 data = I_165,\n                 fct = LL.3())\n\nsummary(drc_165)\n\n\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0 (3 parms)\n\nParameter estimates:\n\n              Estimate Std. Error t-value   p-value    \nb:(Intercept)  1.21560    0.26679  4.5564 0.0198145 *  \nd:(Intercept) 36.14322    1.97554 18.2954 0.0003563 ***\ne:(Intercept)  0.55840    0.11420  4.8898 0.0163598 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 2.436519 (3 degrees of freedom)\n\nAIC(drc_165)\n\n[1] 31.55522\n\nplot(drc_165)\n\n\n\n\n\n\n\nED(drc_165,50, interval = \"delta\")\n\n\nEstimated effective doses\n\n       Estimate Std. Error   Lower   Upper\ne:1:50  0.55840    0.11420 0.19498 0.92182\n\n\n\nI_186 &lt;- fung2 %&gt;% \n  filter(code ==\"186\")\n\ndrc_186 &lt;- drm(mean_germ ~ dose,\n                 data = I_186,\n                 fct = LL.3())\n\nsummary(drc_186)\n\n\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0 (3 parms)\n\nParameter estimates:\n\n               Estimate Std. Error t-value   p-value    \nb:(Intercept)  4.997636   0.542650  9.2097  0.002708 ** \nd:(Intercept) 48.750109   0.721642 67.5545 7.148e-06 ***\ne:(Intercept)  0.579757   0.013332 43.4853 2.677e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 1.020525 (3 degrees of freedom)\n\nAIC(drc_186)\n\n[1] 21.11219\n\nplot(drc_186)\n\n\n\n\n\n\n\nED(drc_186, 50, interval = \"delta\")\n\n\nEstimated effective doses\n\n       Estimate Std. Error    Lower    Upper\ne:1:50 0.579757   0.013332 0.537328 0.622187\n\n\n\n\n\n\nPelo método anterior, é preciso modelar o EC50 individualmente, o que pode ser trabalhoso, dependendo do número de amostras. Assim, o pacote ec50estimator é útil nessa situações, pois permite modelar, calcular a EC50 e o IC de todos os tratamento de uma só vez.\n\nlibrary(ec50estimator)\n\ndf_ec50 &lt;- estimate_EC50(mean_germ~dose,\n                         data = fung2,\n                         isolate_col = \"code\",\n                         interval = \"delta\",\n                         fct = drc::LL.3())\nview(df_ec50)\n\nlibrary(DT)\ndatatable(df_ec50)\n\n\n\n\n\nProblema, não é possível selecionar a função de cada modelo para melhor se adequar a cada tratamento.\nGráfico com as doses de EC50 e intervalo de confiança:\n\ndf_ec50 %&gt;% \n  ggplot(aes(reorder(ID, Estimate), Estimate))+\n  geom_point()+\n  geom_errorbar(aes(ymin = Lower,\n                    ymax = Upper),\n                width = 0.1)+\n  ylim (0, 1.2)+\n  coord_flip()\n\n\n\n\n\n\n\n\nArgumento reorder(ID, Estimate), Estimate , utilizado para ordenar os tratamentos em função da resposta (ordem crescente).",
    "crumbs": [
      "Home",
      "Análises",
      "Aula 10"
    ]
  },
  {
    "objectID": "Aula 3.html",
    "href": "Aula 3.html",
    "title": "Aula 3 - Análises iniciais e criação de gráficos",
    "section": "",
    "text": "Nesta aula, o pacote tidyverse será utilizado para manipulação, criação de subconjuntos e organização dos dados.\nPrimeiro, será feito o carregamento dos pacotes:\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(patchwork)\n\n\nOs dados utlizados serão importados de um arquivo .csv disponível em nuvem.\nResumidamente, o arquivo traz valores de incidência e severidade da ferrugem do cafeeiro em diferentes regiões da Etiópia, de acordo com o sistema de cultivo, manejo da fazenda, sombreamento, cultivar, etc.:\n\ncr &lt;- read_csv(\"https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv\")\n\n\nPara uma visualização rápida dos dados, será utilizada a função glimpse:\n\nglimpse(cr)\n\nRows: 405\nColumns: 13\n$ farm            &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,…\n$ region          &lt;chr&gt; \"SNNPR\", \"SNNPR\", \"SNNPR\", \"SNNPR\", \"SNNPR\", \"SNNPR\", …\n$ zone            &lt;chr&gt; \"Bench Maji\", \"Bench Maji\", \"Bench Maji\", \"Bench Maji\"…\n$ district        &lt;chr&gt; \"Debub Bench\", \"Debub Bench\", \"Debub Bench\", \"Debub Be…\n$ lon             &lt;dbl&gt; 35.44250, 35.44250, 35.42861, 35.42861, 35.42861, 35.3…\n$ lat             &lt;dbl&gt; 6.904722, 6.904722, 6.904444, 6.904444, 6.904444, 6.90…\n$ altitude        &lt;dbl&gt; 1100, 1342, 1434, 1100, 1400, 1342, 1432, 1100, 1400, …\n$ cultivar        &lt;chr&gt; \"Local\", \"Mixture\", \"Mixture\", \"Local\", \"Local\", \"Mixt…\n$ shade           &lt;chr&gt; \"Sun\", \"Mid shade\", \"Mid shade\", \"Sun\", \"Sun\", \"Mid sh…\n$ cropping_system &lt;chr&gt; \"Plantation\", \"Plantation\", \"Plantation\", \"Plantation\"…\n$ farm_management &lt;chr&gt; \"Unmanaged\", \"Minimal\", \"Minimal\", \"Unmanaged\", \"Unman…\n$ inc             &lt;dbl&gt; 86.70805, 51.34354, 43.20000, 76.70805, 47.15808, 51.3…\n$ sev2            &lt;dbl&gt; 55.57986, 17.90349, 8.25120, 46.10154, 12.25167, 19.91…\n\n\n\nA seguir, uma breve descrição estatística dos valores de incidência, com uso da função summary:\n\nsummary(cr$inc)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   9.50   19.43   32.50   34.89   48.20   86.71 \n\n\n\nDos valores de severidade, com uso da função summary:\n\nsummary(cr$sev2)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.2248  2.6892  5.9490  9.0945 12.1593 55.5799 \n\n\n\n\n\nPara uma visualização gráfica dos valores de incidência será criado um histograma:\n\ncr %&gt;%\n  ggplot(aes(x = inc))+\n  geom_histogram ()\n\n\n\n\n\n\n\n\n\nNo histograma gerado, é possível notar que os valores de incidência apresentam três picos (ou seja, são valores de incidência com maior frequência). Além disso, a incidência aparenta não seguir distribuição normal, uma vez que o histograma apresenta um deslocamento à esquerda.\n\nÉ possível criar histogramas por algum critério, por exemplo, as regiões.\nPara isso, será utilizada a função facet_wrap:\n\ncr %&gt;% ggplot(aes(x = inc))+\n  geom_histogram()+\n  facet_wrap(~region)\n\n\n\n\n\n\n\n\nAo analisar os histogramas em função das regiões, é possível notar que na região de Oromia, os valores de incidência são mais frequentes em torno do centro da distribuição. Já na região de SNNPR, as incidências mais frequentes são inferiores a 25%.\n\nTambém serão criados boxplots, divididos por regiões:\n\ncr %&gt;% ggplot(aes(x = inc,))+\n  geom_boxplot()+\n  facet_wrap(~region)+\n  coord_flip()+\n  labs (x = \"Incidence (%)\")\n\n\n\n\n\n\n\n\n\n\n\nPara o agrupamento dos valores em função de uma variável, utiliza-se a função group_by:\n\n\n\ncr %&gt;% group_by(cultivar) %&gt;% \n  summarise(inc_mean = mean(inc),\n            inc_median = median(inc),\n            sd_mean = sd(inc))\n\n# A tibble: 3 × 4\n  cultivar inc_mean inc_median sd_mean\n  &lt;chr&gt;       &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt;\n1 Improved     16.4       15.2    5.66\n2 Local        53.4       50.9   14.3 \n3 Mixture      31.9       31.6   11.2 \n\n\n\n\n\nPara avaliar a correlação de duas variáveis respostas, é possível lançar mão de um gráfico de pontos, plotando nos eixos as variáveis desejadas:\n\ncr %&gt;% \n  ggplot(aes(x = inc, y = sev2))+\n  geom_point()+\n  labs(x = \"Incidence (%)\",\n       y = \"Severity (%)\")\n\n\n\n\n\n\n\n\nNo gráfico gerado é possível observar que há alta correlação positiva entre as variáveis severidade e incidência.\n\n\n\n\n\nSerão realizadas análises de severidade em função da região e, em seguida, da cultivar. Para isso, a função group_by será utilizada mais uma vez.\n\n\n\n\nPara conhecer a média, desvio-padrão e mediana será utilizada a função summarise:\n\ncr %&gt;% group_by(region) %&gt;% \n  summarise(mean_sev = mean(sev2),\n            med_sev = median(sev2),\n            sev_sd = sd(sev2))\n\n# A tibble: 2 × 4\n  region mean_sev med_sev sev_sd\n  &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;\n1 Oromia     8.06    6.23   6.82\n2 SNNPR      9.81    4.88  10.5 \n\n\n\nEm sequência, serão gerados histogramas por região utilizado a função face_wrap:\n\ncr %&gt;% \n  ggplot(aes(sev2))+\n  geom_histogram()+\n  facet_wrap(~region)\n\n\n\n\n\n\n\n\n\n\n\nSeguindo a mesma lógica do item anterior, será feito avaliação da severidade por cultivares:\n\ncr %&gt;%\n  group_by(cultivar) %&gt;%\n  summarise(mean_sev = mean(sev2),\n            med_sev = median(sev2),\n            sd_sev = sd(sev2))\n\n# A tibble: 3 × 4\n  cultivar mean_sev med_sev sd_sev\n  &lt;chr&gt;       &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;\n1 Improved     2.16    1.64   1.82\n2 Local       18.7    17.2   11.1 \n3 Mixture      6.47    5.43   4.35\n\n\n\ncr %&gt;%\n  ggplot(aes(sev2))+\n  geom_histogram()+\n  facet_wrap(~cultivar)\n\n\n\n\n\n\n\n\n\n\n\nAgora, será gerado um histograma da severidade em função de duas variáveis independentes, a região e a cultivar. Nesse caso, primeiro será utilizada a função facet_wrap e depois a função facet_grid:\n\ncr %&gt;% ggplot(aes(x = sev2))+\n  geom_histogram()+\n  facet_wrap(region ~ cultivar)\n\n\n\n\n\n\n\ncr %&gt;%\n  ggplot(aes(sev2))+\n  geom_histogram()+\n  facet_grid(~region~cultivar)\n\n\n\n\n\n\n\n\nÉ possível notar que com a função facet_grid, o plot se torna mais harmônico…\n\n\ng1 &lt;- cr %&gt;% ggplot(aes(x = sev2, fill = region))+\n  geom_histogram(color = \"white\")+\n  facet_grid(region ~ cultivar)+\n  #scale_fill_manual(values = c(\"blue\", \"red\"))+ #Para atribuir cores manualmente.\n  theme(legend.position = \"bottom\")+\n  labs(x = \"Frequency\",\n       y = \"Severity (%)\",\n       fill = \"Region\")\n\n\nPara salvar o plot gerado:\n\nggsave(\"cr.png\", bg = \"white\")\n\n\n\n\n\n\nPara criação de subconjuntos, serão utilizadas duas funções: select e filter.\nA função select faz seleção das colunas em que se deseja trabalhar. Para utilizar essa função, basta colocar como argumentos os títulos das colunas que serão selecionadas.\njá a função filter é responsável por buscar e filtrar, nas linhas, uma informação de interesse. Nesse caso, inicialmente é preciso indicar em qual coluna será feito o filtro, em seguida é indicada a informação de interesse.\nImportante: para o que software busque essa informação é preciso utilizar ==.\n\n\nSerão criados dois subconjuntos apresentando a severidade em função das regiões.\n\nOromia &lt;- cr %&gt;% \n  select(farm, region, cultivar, sev2) %&gt;%\n  filter(region == \"Oromia\")\n\nSNPPR &lt;- cr %&gt;%\n  select(farm, region, cultivar, sev2) %&gt;%\n  filter(region == \"SNNPR\")\n\n\n\nPara visualizar os subconjuntos recém-criados:\n\ng1 &lt;- Oromia %&gt;%\n  ggplot(aes(cultivar, sev2, fill = cultivar))+\n  geom_boxplot()+\n  labs(title = \"Oromia\",\n     x = \"Cultivar\",\n     y = \"Severity (%)\")\ng1\n\n\n\n\n\n\n\ng2 &lt;- SNPPR %&gt;%\n  ggplot(aes(cultivar, sev2, fill = cultivar))+\n  geom_boxplot()+\n  labs(title = \"SNPPR\",\n     x = \"Cultivar\",\n     y = \"Severity (%)\")\ng2\n\n\n\n\n\n\n\n\n\n\n\nPara criar uma figura combinando os dois gráficos gerados anteriormente, será utilizado o pacote patchwork. É possível plotar um gráfico sobre outro\n\n(g1/g2) + plot_layout(guides = \"collect\")\n\n\n\n\n\n\n\n\nOu então um gráfico ao lado do outro\n\n(g1+g2) + \n  plot_layout(guides = \"collect\")+\n  plot_annotation(tag_levels = \"A\") #Para deixar mais apresentável, é possível                                          remover o título colocado no gráfico                                               anteriormente.\n\n\n\n\n\n\n\n\nTambém é possível inverter o modo como o boxplot é plotado, utilizando a função coord_flip:\n\ng3 &lt;- Oromia %&gt;% \n  ggplot(aes(cultivar, sev2, fill = cultivar))+\n  geom_boxplot()+\nlabs(x = \"\",\n     y = \"Severity (%)\")+\n  theme_classic()+\n  coord_flip()\ng3\n\n\n\n\n\n\n\ng4 &lt;- SNPPR %&gt;% \n  ggplot(aes(cultivar, sev2, fill = cultivar))+\n  geom_boxplot()+\nlabs(x = \"\",\n     y = \"Severity (%)\")+\n  theme_classic()+\n  coord_flip()\ng4\n\n\n\n\n\n\n\n(g3 / g4) + \n  plot_layout(guides = \"collect\", axis_titles = \"collect\")+\n  plot_annotation(title = \"Severity of coffee leaf rust in Ethiopia\",\n                   tag_levels = \"A\")\n\n\n\n\n\n\n\n\nPara o salvar o gráfico criado:\n\nggsave(\"grap2.png\", width = 10, height = 8)\n\nAlém disso, o pacote patchwork permite plotar um gráfico dentro do outro.\nPor exemplo, será criado uma figura apresentando um boxplot da severidade da ferrugem na região de Oromia em função das cultivares e também será apresentado um histograma da severidade nesta região:\n\ng5 &lt;- Oromia %&gt;% \n  ggplot(aes(cultivar, sev2, fill = cultivar))+\n  geom_boxplot()+\nlabs(x = \"\",\n     y = \"Severity (%)\",\n     fill = \"Cultivar\")+\n  theme_classic()+\n  coord_flip()\ng5\n\n\n\n\n\n\n\ng6 &lt;- Oromia %&gt;% \n  ggplot(aes(x = sev2))+\n  geom_histogram()+\n  labs(x = \"\", y = \"\")+\n  theme_classic()\ng6\n\n\n\n\n\n\n\ng5 + inset_element(g6, left = 0.5, bottom = 0.5, right = 1, top = 1)",
    "crumbs": [
      "Home",
      "Aulas iniciais",
      "Aula 3 - Análises iniciais e criação de gráficos"
    ]
  },
  {
    "objectID": "Aula 3.html#carregando-pacotes-importando-os-dados-e-resumo-estatístico",
    "href": "Aula 3.html#carregando-pacotes-importando-os-dados-e-resumo-estatístico",
    "title": "Aula 3 - Análises iniciais e criação de gráficos",
    "section": "",
    "text": "Nesta aula, o pacote tidyverse será utilizado para manipulação, criação de subconjuntos e organização dos dados.\nPrimeiro, será feito o carregamento dos pacotes:\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(patchwork)\n\n\nOs dados utlizados serão importados de um arquivo .csv disponível em nuvem.\nResumidamente, o arquivo traz valores de incidência e severidade da ferrugem do cafeeiro em diferentes regiões da Etiópia, de acordo com o sistema de cultivo, manejo da fazenda, sombreamento, cultivar, etc.:\n\ncr &lt;- read_csv(\"https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv\")\n\n\nPara uma visualização rápida dos dados, será utilizada a função glimpse:\n\nglimpse(cr)\n\nRows: 405\nColumns: 13\n$ farm            &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,…\n$ region          &lt;chr&gt; \"SNNPR\", \"SNNPR\", \"SNNPR\", \"SNNPR\", \"SNNPR\", \"SNNPR\", …\n$ zone            &lt;chr&gt; \"Bench Maji\", \"Bench Maji\", \"Bench Maji\", \"Bench Maji\"…\n$ district        &lt;chr&gt; \"Debub Bench\", \"Debub Bench\", \"Debub Bench\", \"Debub Be…\n$ lon             &lt;dbl&gt; 35.44250, 35.44250, 35.42861, 35.42861, 35.42861, 35.3…\n$ lat             &lt;dbl&gt; 6.904722, 6.904722, 6.904444, 6.904444, 6.904444, 6.90…\n$ altitude        &lt;dbl&gt; 1100, 1342, 1434, 1100, 1400, 1342, 1432, 1100, 1400, …\n$ cultivar        &lt;chr&gt; \"Local\", \"Mixture\", \"Mixture\", \"Local\", \"Local\", \"Mixt…\n$ shade           &lt;chr&gt; \"Sun\", \"Mid shade\", \"Mid shade\", \"Sun\", \"Sun\", \"Mid sh…\n$ cropping_system &lt;chr&gt; \"Plantation\", \"Plantation\", \"Plantation\", \"Plantation\"…\n$ farm_management &lt;chr&gt; \"Unmanaged\", \"Minimal\", \"Minimal\", \"Unmanaged\", \"Unman…\n$ inc             &lt;dbl&gt; 86.70805, 51.34354, 43.20000, 76.70805, 47.15808, 51.3…\n$ sev2            &lt;dbl&gt; 55.57986, 17.90349, 8.25120, 46.10154, 12.25167, 19.91…\n\n\n\nA seguir, uma breve descrição estatística dos valores de incidência, com uso da função summary:\n\nsummary(cr$inc)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   9.50   19.43   32.50   34.89   48.20   86.71 \n\n\n\nDos valores de severidade, com uso da função summary:\n\nsummary(cr$sev2)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.2248  2.6892  5.9490  9.0945 12.1593 55.5799",
    "crumbs": [
      "Home",
      "Aulas iniciais",
      "Aula 3 - Análises iniciais e criação de gráficos"
    ]
  },
  {
    "objectID": "Aula 3.html#resumo-gráfico-geral-do-dataset",
    "href": "Aula 3.html#resumo-gráfico-geral-do-dataset",
    "title": "Aula 3 - Análises iniciais e criação de gráficos",
    "section": "",
    "text": "Para uma visualização gráfica dos valores de incidência será criado um histograma:\n\ncr %&gt;%\n  ggplot(aes(x = inc))+\n  geom_histogram ()\n\n\n\n\n\n\n\n\n\nNo histograma gerado, é possível notar que os valores de incidência apresentam três picos (ou seja, são valores de incidência com maior frequência). Além disso, a incidência aparenta não seguir distribuição normal, uma vez que o histograma apresenta um deslocamento à esquerda.\n\nÉ possível criar histogramas por algum critério, por exemplo, as regiões.\nPara isso, será utilizada a função facet_wrap:\n\ncr %&gt;% ggplot(aes(x = inc))+\n  geom_histogram()+\n  facet_wrap(~region)\n\n\n\n\n\n\n\n\nAo analisar os histogramas em função das regiões, é possível notar que na região de Oromia, os valores de incidência são mais frequentes em torno do centro da distribuição. Já na região de SNNPR, as incidências mais frequentes são inferiores a 25%.\n\nTambém serão criados boxplots, divididos por regiões:\n\ncr %&gt;% ggplot(aes(x = inc,))+\n  geom_boxplot()+\n  facet_wrap(~region)+\n  coord_flip()+\n  labs (x = \"Incidence (%)\")",
    "crumbs": [
      "Home",
      "Aulas iniciais",
      "Aula 3 - Análises iniciais e criação de gráficos"
    ]
  },
  {
    "objectID": "Aula 3.html#estatistícas-descritivas-dos-dados-por-variável",
    "href": "Aula 3.html#estatistícas-descritivas-dos-dados-por-variável",
    "title": "Aula 3 - Análises iniciais e criação de gráficos",
    "section": "",
    "text": "Para o agrupamento dos valores em função de uma variável, utiliza-se a função group_by:\n\n\n\ncr %&gt;% group_by(cultivar) %&gt;% \n  summarise(inc_mean = mean(inc),\n            inc_median = median(inc),\n            sd_mean = sd(inc))\n\n# A tibble: 3 × 4\n  cultivar inc_mean inc_median sd_mean\n  &lt;chr&gt;       &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt;\n1 Improved     16.4       15.2    5.66\n2 Local        53.4       50.9   14.3 \n3 Mixture      31.9       31.6   11.2 \n\n\n\n\n\nPara avaliar a correlação de duas variáveis respostas, é possível lançar mão de um gráfico de pontos, plotando nos eixos as variáveis desejadas:\n\ncr %&gt;% \n  ggplot(aes(x = inc, y = sev2))+\n  geom_point()+\n  labs(x = \"Incidence (%)\",\n       y = \"Severity (%)\")\n\n\n\n\n\n\n\n\nNo gráfico gerado é possível observar que há alta correlação positiva entre as variáveis severidade e incidência.\n\n\n\n\n\nSerão realizadas análises de severidade em função da região e, em seguida, da cultivar. Para isso, a função group_by será utilizada mais uma vez.\n\n\n\n\nPara conhecer a média, desvio-padrão e mediana será utilizada a função summarise:\n\ncr %&gt;% group_by(region) %&gt;% \n  summarise(mean_sev = mean(sev2),\n            med_sev = median(sev2),\n            sev_sd = sd(sev2))\n\n# A tibble: 2 × 4\n  region mean_sev med_sev sev_sd\n  &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;\n1 Oromia     8.06    6.23   6.82\n2 SNNPR      9.81    4.88  10.5 \n\n\n\nEm sequência, serão gerados histogramas por região utilizado a função face_wrap:\n\ncr %&gt;% \n  ggplot(aes(sev2))+\n  geom_histogram()+\n  facet_wrap(~region)\n\n\n\n\n\n\n\n\n\n\n\nSeguindo a mesma lógica do item anterior, será feito avaliação da severidade por cultivares:\n\ncr %&gt;%\n  group_by(cultivar) %&gt;%\n  summarise(mean_sev = mean(sev2),\n            med_sev = median(sev2),\n            sd_sev = sd(sev2))\n\n# A tibble: 3 × 4\n  cultivar mean_sev med_sev sd_sev\n  &lt;chr&gt;       &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;\n1 Improved     2.16    1.64   1.82\n2 Local       18.7    17.2   11.1 \n3 Mixture      6.47    5.43   4.35\n\n\n\ncr %&gt;%\n  ggplot(aes(sev2))+\n  geom_histogram()+\n  facet_wrap(~cultivar)\n\n\n\n\n\n\n\n\n\n\n\nAgora, será gerado um histograma da severidade em função de duas variáveis independentes, a região e a cultivar. Nesse caso, primeiro será utilizada a função facet_wrap e depois a função facet_grid:\n\ncr %&gt;% ggplot(aes(x = sev2))+\n  geom_histogram()+\n  facet_wrap(region ~ cultivar)\n\n\n\n\n\n\n\ncr %&gt;%\n  ggplot(aes(sev2))+\n  geom_histogram()+\n  facet_grid(~region~cultivar)\n\n\n\n\n\n\n\n\nÉ possível notar que com a função facet_grid, o plot se torna mais harmônico…\n\n\ng1 &lt;- cr %&gt;% ggplot(aes(x = sev2, fill = region))+\n  geom_histogram(color = \"white\")+\n  facet_grid(region ~ cultivar)+\n  #scale_fill_manual(values = c(\"blue\", \"red\"))+ #Para atribuir cores manualmente.\n  theme(legend.position = \"bottom\")+\n  labs(x = \"Frequency\",\n       y = \"Severity (%)\",\n       fill = \"Region\")\n\n\nPara salvar o plot gerado:\n\nggsave(\"cr.png\", bg = \"white\")",
    "crumbs": [
      "Home",
      "Aulas iniciais",
      "Aula 3 - Análises iniciais e criação de gráficos"
    ]
  },
  {
    "objectID": "Aula 3.html#criando-subconjuntos",
    "href": "Aula 3.html#criando-subconjuntos",
    "title": "Aula 3 - Análises iniciais e criação de gráficos",
    "section": "",
    "text": "Para criação de subconjuntos, serão utilizadas duas funções: select e filter.\nA função select faz seleção das colunas em que se deseja trabalhar. Para utilizar essa função, basta colocar como argumentos os títulos das colunas que serão selecionadas.\njá a função filter é responsável por buscar e filtrar, nas linhas, uma informação de interesse. Nesse caso, inicialmente é preciso indicar em qual coluna será feito o filtro, em seguida é indicada a informação de interesse.\nImportante: para o que software busque essa informação é preciso utilizar ==.\n\n\nSerão criados dois subconjuntos apresentando a severidade em função das regiões.\n\nOromia &lt;- cr %&gt;% \n  select(farm, region, cultivar, sev2) %&gt;%\n  filter(region == \"Oromia\")\n\nSNPPR &lt;- cr %&gt;%\n  select(farm, region, cultivar, sev2) %&gt;%\n  filter(region == \"SNNPR\")\n\n\n\nPara visualizar os subconjuntos recém-criados:\n\ng1 &lt;- Oromia %&gt;%\n  ggplot(aes(cultivar, sev2, fill = cultivar))+\n  geom_boxplot()+\n  labs(title = \"Oromia\",\n     x = \"Cultivar\",\n     y = \"Severity (%)\")\ng1\n\n\n\n\n\n\n\ng2 &lt;- SNPPR %&gt;%\n  ggplot(aes(cultivar, sev2, fill = cultivar))+\n  geom_boxplot()+\n  labs(title = \"SNPPR\",\n     x = \"Cultivar\",\n     y = \"Severity (%)\")\ng2\n\n\n\n\n\n\n\n\n\n\n\nPara criar uma figura combinando os dois gráficos gerados anteriormente, será utilizado o pacote patchwork. É possível plotar um gráfico sobre outro\n\n(g1/g2) + plot_layout(guides = \"collect\")\n\n\n\n\n\n\n\n\nOu então um gráfico ao lado do outro\n\n(g1+g2) + \n  plot_layout(guides = \"collect\")+\n  plot_annotation(tag_levels = \"A\") #Para deixar mais apresentável, é possível                                          remover o título colocado no gráfico                                               anteriormente.\n\n\n\n\n\n\n\n\nTambém é possível inverter o modo como o boxplot é plotado, utilizando a função coord_flip:\n\ng3 &lt;- Oromia %&gt;% \n  ggplot(aes(cultivar, sev2, fill = cultivar))+\n  geom_boxplot()+\nlabs(x = \"\",\n     y = \"Severity (%)\")+\n  theme_classic()+\n  coord_flip()\ng3\n\n\n\n\n\n\n\ng4 &lt;- SNPPR %&gt;% \n  ggplot(aes(cultivar, sev2, fill = cultivar))+\n  geom_boxplot()+\nlabs(x = \"\",\n     y = \"Severity (%)\")+\n  theme_classic()+\n  coord_flip()\ng4\n\n\n\n\n\n\n\n(g3 / g4) + \n  plot_layout(guides = \"collect\", axis_titles = \"collect\")+\n  plot_annotation(title = \"Severity of coffee leaf rust in Ethiopia\",\n                   tag_levels = \"A\")\n\n\n\n\n\n\n\n\nPara o salvar o gráfico criado:\n\nggsave(\"grap2.png\", width = 10, height = 8)\n\nAlém disso, o pacote patchwork permite plotar um gráfico dentro do outro.\nPor exemplo, será criado uma figura apresentando um boxplot da severidade da ferrugem na região de Oromia em função das cultivares e também será apresentado um histograma da severidade nesta região:\n\ng5 &lt;- Oromia %&gt;% \n  ggplot(aes(cultivar, sev2, fill = cultivar))+\n  geom_boxplot()+\nlabs(x = \"\",\n     y = \"Severity (%)\",\n     fill = \"Cultivar\")+\n  theme_classic()+\n  coord_flip()\ng5\n\n\n\n\n\n\n\ng6 &lt;- Oromia %&gt;% \n  ggplot(aes(x = sev2))+\n  geom_histogram()+\n  labs(x = \"\", y = \"\")+\n  theme_classic()\ng6\n\n\n\n\n\n\n\ng5 + inset_element(g6, left = 0.5, bottom = 0.5, right = 1, top = 1)",
    "crumbs": [
      "Home",
      "Aulas iniciais",
      "Aula 3 - Análises iniciais e criação de gráficos"
    ]
  }
]