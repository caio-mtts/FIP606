---
title: "Aula 3 - Análises iniciais e criação de gráficos"
author: "Caio"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
execute:
  warning: false
  error: false
---

# Aula 3

## Carregando pacotes, importando os dados e resumo estatístico

Nesta aula, o pacote **`tidyverse`** será utilizado para manipulação, criação de subconjuntos e organização dos dados.\
Primeiro, será feito o carregamento dos pacotes:

```{r}
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(patchwork)
```

\
Os dados utlizados serão importados de um arquivo .csv disponível em nuvem.\
Resumidamente, o arquivo traz valores de incidência e severidade da ferrugem do cafeeiro em diferentes regiões da Etiópia, de acordo com o sistema de cultivo, manejo da fazenda, sombreamento, cultivar, etc.:

```{r}
cr <- read_csv("https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv")
```

\
Para uma visualização rápida dos dados, será utilizada a função `glimpse`:

```{r}
glimpse(cr)
```

\
A seguir, uma breve descrição estatística dos valores de incidência, com uso da função `summary`:

```{r}
summary(cr$inc)
```

\
Dos valores de severidade, com uso da função `summary`:

```{r}
summary(cr$sev2)
```

## Resumo gráfico geral do dataset

Para uma visualização gráfica dos valores de incidência será criado um histograma:

```{r}
cr %>%
  ggplot(aes(x = inc))+
  geom_histogram ()
```

\
No histograma gerado, é possível notar que os valores de incidência apresentam três picos (ou seja, são valores de incidência com maior frequência). Além disso, a incidência aparenta não seguir distribuição normal, uma vez que o histograma apresenta um deslocamento à esquerda.

\
É possível criar histogramas por algum critério, por exemplo, as regiões.\
Para isso, será utilizada a função **`facet_wrap`**:

```{r}
cr %>% ggplot(aes(x = inc))+
  geom_histogram()+
  facet_wrap(~region)
```

Ao analisar os histogramas em função das regiões, é possível notar que na região de Oromia, os valores de incidência são mais frequentes em torno do centro da distribuição. Já na região de SNNPR, as incidências mais frequentes são inferiores a 25%.

\
Também serão criados boxplots, divididos por regiões:

```{r}
cr %>% ggplot(aes(x = inc,))+
  geom_boxplot()+
  facet_wrap(~region)+
  coord_flip()+
  labs (x = "Incidence (%)")
```

## Estatistícas descritivas dos dados por variável

Para o agrupamento dos valores em função de uma variável, utiliza-se a função `group_by`:

### Análise da incidência

```{r}
cr %>% group_by(cultivar) %>% 
  summarise(inc_mean = mean(inc),
            inc_median = median(inc),
            sd_mean = sd(inc))
```

### Comparação da incidência *versus* severidade

Para avaliar a correlação de duas variáveis respostas, é possível lançar mão de um gráfico de pontos, plotando nos eixos as variáveis desejadas:

```{r}
cr %>% 
  ggplot(aes(x = inc, y = sev2))+
  geom_point()+
  labs(x = "Incidence (%)",
       y = "Severity (%)")
```

No gráfico gerado é possível observar que há alta correlação positiva entre as variáveis severidade e incidência.\
\

### Análise da severidade

Serão realizadas análises de severidade em função da região e, em seguida, da cultivar. Para isso, a função `group_by` será utilizada mais uma vez.\
\

#### Severidade por região

Para conhecer a média, desvio-padrão e mediana será utilizada a função `summarise`:

```{r}
cr %>% group_by(region) %>% 
  summarise(mean_sev = mean(sev2),
            med_sev = median(sev2),
            sev_sd = sd(sev2))
```

\
Em sequência, serão gerados histogramas por região utilizado a função `face_wrap`:

```{r}
cr %>% 
  ggplot(aes(sev2))+
  geom_histogram()+
  facet_wrap(~region)
```

#### Severidade por cultivar

Seguindo a mesma lógica do item anterior, será feito avaliação da severidade por cultivares:

```{r}
cr %>%
  group_by(cultivar) %>%
  summarise(mean_sev = mean(sev2),
            med_sev = median(sev2),
            sd_sev = sd(sev2))
```

```{r}
cr %>%
  ggplot(aes(sev2))+
  geom_histogram()+
  facet_wrap(~cultivar)

```

#### Severidade por região e cultivar

Agora, será gerado um histograma da severidade em função de duas variáveis independentes, a região e a cultivar. Nesse caso, primeiro será utilizada a função `facet_wrap` e depois a função `facet_grid`:

```{r}
cr %>% ggplot(aes(x = sev2))+
  geom_histogram()+
  facet_wrap(region ~ cultivar)

cr %>%
  ggplot(aes(sev2))+
  geom_histogram()+
  facet_grid(~region~cultivar)
```

É possível notar que com a função `facet_grid`, o plot se torna mais harmônico...\

```{r}
g1 <- cr %>% ggplot(aes(x = sev2, fill = region))+
  geom_histogram(color = "white")+
  facet_grid(region ~ cultivar)+
  #scale_fill_manual(values = c("blue", "red"))+ #Para atribuir cores manualmente.
  theme(legend.position = "bottom")+
  labs(x = "Frequency",
       y = "Severity (%)",
       fill = "Region")
```

\
Para salvar o plot gerado:

```{r}
ggsave("cr.png", bg = "white")
```

## Criando subconjuntos

Para criação de subconjuntos, serão utilizadas duas funções: `select` e `filter`.\
A função `select` faz seleção das colunas em que se deseja trabalhar. Para utilizar essa função, basta colocar como argumentos os títulos das colunas que serão selecionadas.

já a função `filter` é responsável por buscar e filtrar, nas linhas, uma informação de interesse. Nesse caso, inicialmente é preciso indicar em qual coluna será feito o filtro, em seguida é indicada a informação de interesse.\
Importante: para o que software busque essa informação é preciso utilizar `==`.\
\
\
Serão criados dois subconjuntos apresentando a severidade em função das regiões.

```{r}
Oromia <- cr %>% 
  select(farm, region, cultivar, sev2) %>%
  filter(region == "Oromia")

SNPPR <- cr %>%
  select(farm, region, cultivar, sev2) %>%
  filter(region == "SNNPR")
```

### Visualizando os subconjuntos graficamente:

Para visualizar os subconjuntos recém-criados:

```{r}
g1 <- Oromia %>%
  ggplot(aes(cultivar, sev2, fill = cultivar))+
  geom_boxplot()+
  labs(title = "Oromia",
     x = "Cultivar",
     y = "Severity (%)")
g1

g2 <- SNPPR %>%
  ggplot(aes(cultivar, sev2, fill = cultivar))+
  geom_boxplot()+
  labs(title = "SNPPR",
     x = "Cultivar",
     y = "Severity (%)")
g2
```

### Criando uma figura combinando os dois gráficos

Para criar uma figura combinando os dois gráficos gerados anteriormente, será utilizado o pacote `patchwork`. É possível plotar um gráfico sobre outro

```{r}
(g1/g2) + plot_layout(guides = "collect")
```

Ou então um gráfico ao lado do outro

```{r}
(g1+g2) + 
  plot_layout(guides = "collect")+
  plot_annotation(tag_levels = "A") #Para deixar mais apresentável, é possível                                          remover o título colocado no gráfico                                               anteriormente.
```

Também é possível inverter o modo como o boxplot é plotado, utilizando a função `coord_flip`:

```{r}
g3 <- Oromia %>% 
  ggplot(aes(cultivar, sev2, fill = cultivar))+
  geom_boxplot()+
labs(x = "",
     y = "Severity (%)")+
  theme_classic()+
  coord_flip()
g3


g4 <- SNPPR %>% 
  ggplot(aes(cultivar, sev2, fill = cultivar))+
  geom_boxplot()+
labs(x = "",
     y = "Severity (%)")+
  theme_classic()+
  coord_flip()
g4

(g3 / g4) + 
  plot_layout(guides = "collect", axis_titles = "collect")+
  plot_annotation(title = "Severity of coffee leaf rust in Ethiopia",
                   tag_levels = "A")
```

Para o salvar o gráfico criado:

```{r}
ggsave("grap2.png", width = 10, height = 8)
```

Além disso, o pacote `patchwork` permite plotar um gráfico dentro do outro.\
Por exemplo, será criado uma figura apresentando um boxplot da severidade da ferrugem na região de Oromia em função das cultivares e também será apresentado um histograma da severidade nesta região:

```{r}
g5 <- Oromia %>% 
  ggplot(aes(cultivar, sev2, fill = cultivar))+
  geom_boxplot()+
labs(x = "",
     y = "Severity (%)",
     fill = "Cultivar")+
  theme_classic()+
  coord_flip()
g5


g6 <- Oromia %>% 
  ggplot(aes(x = sev2))+
  geom_histogram()+
  labs(x = "", y = "")+
  theme_classic()
g6

g5 + inset_element(g6, left = 0.5, bottom = 0.5, right = 1, top = 1)
```
