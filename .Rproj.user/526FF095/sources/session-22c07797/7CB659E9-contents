---
title: "Aula 8 - Estatística inferencial e Curva de progresso da doença"
author: "Caio"
format: html
editor: visual
execute: 
  error: false
  warning: false
editor_options: 
  chunk_output_type: console
---

Esta aula aborda a análise de variância (ANOVA) de um experimento conduzido em delineamento com blocos ao acaso. Transformações de dados, como raiz quadrada e Box-Cox, são aplicadas quando necessário. Comparações de médias são feitas utilizando os pacotes emmeans e multcomp. Em seguida, é apresentado como construir uma curva de progresso da doença, calculando a área sob a curva (AUDPC) e realizando ANOVA para avaliar as diferenças entre tratamentos.

## Carregando os pacotes

```{r}
library(gsheet)
library(tidyverse)
library(patchwork)
library(performance)
library(DHARMa)
library(emmeans)
library(multcomp)
library(multcompView)
library(MASS)
library(epifitter)
```

## Importando dados

```{r}
soja <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=866852711")
```

\
Os dados são referentes a um experimento de soja em campo, conduzido em blocos casualizados, onde o efeito de diferentes fungicidas (coluna "TRAT", 1 nível, 8 fatores) foi avaliado sobre as doenças de final de ciclo (DFC), a severidade da ferrugem (FER) e a produtividade (PROD).\
\
Como os dados da coluna TRAT e BLOCO são do tipo numérico, é preciso transformá-los para fator.

```{r}
soja$TRAT <- as.factor(soja$TRAT)
soja$BLOCO <- as.factor(soja$BLOCO)


#ou#


soja <- soja %>% 
  mutate(TRAT = as.factor(TRAT),
         BLOCO = as.factor(BLOCO))
```

```{r}
glimpse(soja)
```

## Estatística Descritiva - Visualização gráfica

Para visualização dos dados das variáveis dependentes (DFC, FER e PROD), serão construídos gráficos de pontos (`ggplot`: `geom_jitter`) acrescido do intervalo de confiança.\
Para a apresentação do intervalo de confiança, será utilizada a função `stat_summary (fun.data)`, com o argumento `"mean_cl_boot"`.

### DFC

```{r}
DFC <- soja %>% 
  ggplot(aes(TRAT, DFC))+
  geom_jitter(width = 0.05)+
  stat_summary (fun.data = "mean_cl_boot", color = "darkred", alpha = 0.5)
DFC
```

### FER

```{r}
FER <- soja %>% 
  ggplot(aes(TRAT, FER))+
  geom_jitter(width = 0.05)+
    stat_summary (fun.data = "mean_cl_boot", color = "darkred", alpha = 0.5)
FER
```

### PROD

```{r}
PROD <- soja %>% 
  ggplot(aes(TRAT, PROD))+
  geom_jitter(width = 0.05)+
    stat_summary (fun.data = "mean_cl_boot", color = "darkred", alpha = 0.5)
PROD
```

### DFC+FER+PROD

Para combinar os gráficos em uma única figura, utiliza-se o pacote **`patchwork`**:

```{r}
(PROD + DFC / FER)
```

## Estatística Inferencial

## DFC

### ANOVA

Para realizar a análise de variância é preciso construir um modelo, nesse caso, um modelo linear (função `lm`), considerando TRAT e BLOCO como fatores fixos.

```{r}
aov_dfc <- lm (DFC ~ TRAT + BLOCO,
               data = soja)

anova(aov_dfc)
```

\
Para o fator fixo, TRAT, há efeito significativo, logo há algum tratamento que difere dos demais. Para o fator BLOCO, não houve efeito, logo, não há diferença significativa entre eles.\

### Pressuposições da ANOVA

A avaliação das pressuposições da ANOVA será realizada com as funções `check_normality` e `check_heteroscedasticity` (pacote **`Performance`**).

```{r}
check_normality(aov_dfc)
check_heteroscedasticity(aov_dfc)
```

Os testes mostram que os resíduos são normalmente distribuídos e que há homogeneidade de variâncias entre os grupos. Assim, é possível proceder a comparação de médias.

### Comparação de médias

Para comparação de médias o modelo gerado acima será aplicado à função `emmeans` para criação de um novo objeto. Essa função estima uma média com base no modelo, logo algumas vezes pode não ser igual a média aritmética.

```{r}
medias_dfc <- emmeans(aov_dfc, ~TRAT)
medias_dfc
```

Em seguida, o objeto criado será argumento das funções `pwpm` (**`emmeans`**) e `cld` (**`multcomp`**), que permitem visualização da comparação de médias.

```{r}
pwpm (medias_dfc)
```

Na função `pwpm`, há três informações úteis. Na diagonal, é apresentado o valor médio estimado para cada tratamento. Acima da diagonal, são plotados os valores de probabilidade, relacionados ao teste de Tukey, referentes às comparações múltiplas entre tratamentos. Abaixo da diagonal, há a diferença de valores médios entre os tratamentos.

```{r}
cld (medias_dfc, Letters = LETTERS)
```

A função `cld` apresenta o resultado do teste de Tukey, com as letras representando os agrupamentos.

## FER

### ANOVA

Similar ao já feito para a variável DFC, será agora conduzido para a variável FER.

```{r}
aov_fer <- lm (FER ~ TRAT + BLOCO,
               data = soja)  
anova(aov_fer)
```

Para o fator fixo TRAT, há efeito significativo, logo há algum tratamento que difere dos demais. Para o fator BLOCO, não houve efeito já que não há diferença significativa entre eles.

### Pressuposições da ANOVA

```{r}
check_normality(aov_fer) 
check_heteroscedasticity(aov_fer)
```

Os testes demonstram que os dados não satisfazem as pressuposições da ANOVA, logo será preciso adotar uma alternativa para análise dos dados, como por exemplo a transformação por raiz quadrada.

### Transformação - Raiz quadrada

```{r}
aov_fer1 <- lm (sqrt(FER) ~ TRAT + BLOCO,
               data = soja)  
anova(aov_fer1)
```

Para os dados transformados pela raiz quadrada, o fator fixo TRAT continua possuindo efeito significativo, logo há algum tratamento que difere dos demais. Para o fator BLOCO, não houve efeito já que não há diferença significativa entre eles.

#### Pressuposições da ANOVA

```{r}
check_normality(aov_fer1)
check_heteroscedasticity(aov_fer1)
```

A transformação por raiz quadrada foi suficiente para normalizar os valores do resíduo, no entanto, ainda há heterocedasticidade. Assim, uma outra transformação será testada: transformação de Box-Cox.

### Transformação - Box-Cox

```{r}
b <- boxcox(lm(soja$FER ~ 1))
lambda <- b$x [which.max(b$y)]
lambda
```

```{r}
soja$FER2 <-(soja$FER ^ lambda - 1) / lambda
```

#### Novo modelo - Após transformação

```{r}
aov_fer2 <- lm (FER2 ~ TRAT + BLOCO,
               data = soja)  
anova(aov_fer2)
```

Para os dados transformados por Box-Cox, o fator fixo TRAT continua possuindo efeito significativo, logo há algum tratamento que difere dos demais. Para o fator BLOCO, não houve efeito já que não há diferença significativa entre eles.

#### Pressuposições da ANOVA

```{r}
check_normality(aov_fer2) 
check_heteroscedasticity(aov_fer2)
```

Os testes demonstram que a transformação de Box-Cox foi suficiente para conferir normalidade aos resíduos e homogeneidade de variância entre os grupos.

#### Comparação de médias

Com os dados transformados por Box-Cox, será feita a comparação de médias como já descrito anteriormente.

```{r}
medias_fer2 <- emmeans(aov_fer2, ~TRAT) 
medias_fer2
```

```{r}
pwpm (medias_fer2)
```

```{r}
cld (medias_fer2, Letters = LETTERS)
```

Pelo fato de ter sido utilizada a transformação de Box-Cox, os valores apresentados no resultado acima são da transformação e para apresentação em uma tabela seria preciso obter os originais.

## PROD

### ANOVA

Similar ao já feito para a variável DFC, será agora conduzido para a variável PROD.

```{r}
aov_prod <- lm(PROD ~ TRAT + BLOCO,
               data = soja)
anova(aov_prod)
```

\
Para o fator fixo TRAT, há efeito significativo, logo há algum tratamento que difere dos demais. Para o fator BLOCO, não houve efeito já que não há diferença significativa entre eles.\

### Pressuposições da ANOVA

```{r}
check_normality(aov_prod)
check_heteroscedasticity(aov_prod)
```

Os testes mostram que os resíduos são normalmente distribuídos e que há homogeneidade de variâncias entre os grupos. Assim, é possível proceder a comparação de médias.

### Comparação de médias

```{r}
medias_prod <- emmeans(aov_prod, ~ TRAT)
medias_prod
```

```{r}
df_prod_grupo <- cld (medias_prod, Letters = LETTERS)
df_prod_grupo
```

Gráfico com médias e intervalo de confiança, uma maneira visual de apresentar os resultados.

```{r}
df_prod <- data.frame(medias_prod)
df_prod %>% 
  ggplot(aes(TRAT, emmean))+
  geom_point()+
  ylim (3000, 6600)+
  geom_errorbar(aes(min = lower.CL,
                    max = upper.CL),
                    width = 0.1)+
  annotate(geom = "text", 
           x = 1.2, 
           y = 4200, 
           label = "A")+
  annotate(geom = "text", 
           x = 2.2, 
           y = 4950, 
           label = "AB")+
  annotate(geom = "text", 
           x = 3.2, 
           y = 5100, 
           label = "AB")
```

A anotação das letras, deve ser feita manualmente com a função `annotate`.\

### Exportando os dados

Também é possível exportar a tabela de comparação de médias com a função `write_xlsx` (**`writexl`**).

```{r}
knitr::kable(df_prod_grupo %>% 
               dplyr::select(TRAT, emmean, .group))

library(writexl)
write_xlsx(df_prod, "df.xlsx")
```

## Curva de progresso da doença

### Importando os dados

Para construção de uma curva de progresso da doença usaremos como exemplo um conjunto de dados que descreve diferentes métodos de irrigação (variável independente, um fator, 2 níveis) e seu efeito sobre a severidade (variável dependente) ao longo dos dias.

```{r}
curve <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1807247585")

curve$severity2 <- (curve$severity*100)
```

Como os dados de severidade são apresentados em valores decimais, é possível colocá-los em porcentagem fazendo multiplicação por 100.

Para construir a curva, primeiro é preciso agrupar os dados (`group_by`) em função do método de irrigação e do dia. Em seguida, é calculada a média em função das mesmas variáveis (dia e irrigação) com a função `summarise(sev_mean = mean(sev_X))`.

```{r}
curve2 <- curve %>% 
  group_by(Irrigation, day) %>% 
  summarise(sev_mean = mean(severity))

curve2
```

### Visualização gráfica

Para conhecer o comportamento da severidade ao longo do tempo, será construído um gráfico de pontos (`geom_point`) e linhas (`geom_line`), diferenciando os tratamentos ("Irrigation") pela cor:

```{r}
curve2 %>% 
  ggplot(aes(day, sev_mean, colour = Irrigation))+
  geom_point()+
  geom_line()
```

Ou, uma figura com dois gráficos. Um para cada nível do fator "Irrigation":

```{r}
curve2 %>% 
  ggplot(aes(day, sev_mean))+
  geom_point()+
  geom_line()+
  facet_wrap(~Irrigation)

```

### Cálculo da área abaixo da curva de progresso da doença

Para o cálculo da área abaixo da curva de progresso da doença (AACPD, ou "*area under the disease progress curve",* AUDPC), será criado um novo dataframe. Para isso, será feito o agrupamento (`group_by`) das variáveis em função do tratamento ("Irrigation") e das repetições ("rep"). Em seguida, será utilizada a função `summarise` para o cálculo da AACPD (função `AUDPC`, pacote **`epifitter`**).

```{r}
curve3 <- curve %>% 
  group_by(Irrigation, rep) %>% 
  summarise(aacpd = AUDPC(day, severity))

curve3
```

### ANOVA

Antes de realizar análise de variância é preciso estabelece um modelo, o que será com os valores de AACPD e a função (`lm`):

```{r}
m_curve <- lm(aacpd ~ Irrigation+factor(rep),
              data = curve3)
```

#### Avaliação das pressuposições

Com funções do pacote **`Performance`**:

```{r}
check_normality(m_curve)
check_heteroscedasticity(m_curve)
```

Com o pacote **`DHARMa`**:

```{r}
plot(simulateResiduals(m_curve))
```

Com o teste de Shapiro-Wilk (`shapiro.test`) e o teste de Bartlett (`bartlett.test`):

```{r}
shapiro.test(m_curve$residuals)
bartlett.test (aacpd ~ Irrigation,
               data = curve3)
```

Ambas as metodologias demonstram que os dados seguem distribuição normal e possuem homocedasticidade, logo é possível proceder análise de variância.

#### ANOVA

```{r}
anova(m_curve)
```

A ANOVA mostra que não há diferença entre as áreas.

```{r}
agricolae::cv.model(m_curve)
```

O que poderia ser explicado pelo coeficiente de variação do experimento, que foi muito baixo (CV = 1.09 %).
