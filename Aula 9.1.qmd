---
title: "Aula 9"
format: html
editor: visual
execute: 
  error: false
  warning: false
---

## Carregando os pacotes

```{r}
library(gsheet)
library(tidyverse)
library(lme4)
library(car)
library(performance)
library(DHARMa)
library(emmeans)
library(multcomp)
library(multcompView)
library(patchwork)
library(r4pde)
```

## Análise de um experimento em parcelas subdivididas

Experimentos em parcelas subdivididas são utilizados quando o nível de um fator primário (ou tratamento) é aplicado a uma parcela relativamente grande e todos os níveis de um segundo fator secundário são aplicados às subparcelas desta parcela maior. Os tratamentos primários são distribuídos às parcelas de acordo com um delineamento especificado, já os tratamentos secundários são distribuídos às subparcelas de forma aleatória.\

## Importando os dados

Para exemplificar a análise de um experimento em parcelas subdivididas, será utilizado um conjunto de dados onde o objetivo foi avaliar o índice de doença e produtividade de híbridos de milho (fator primário) ao serem submetidos a dois métodos de inoculação (fator secundário). Um esboço desse arranjo experimental é apresentado abaixo.

![Experimento em parcelas subdivididas.](Imagem1.png){width="1650"}

```{r}
milho <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1345524759")
```

```{r}
glimpse(milho)
```

## Visualização gráfica

### Índice de doença

Para visualização dos dados relacionados ao índice de doença e o método de inoculação será construído um gráfico de pontos (`geom_jitter`) acrescido do intervalo de confiança (`stat_summary(fund.data = "mean_cl_boot"`). Para gerar uma figura com os gráficos individuais de cada tratamento é utilizada a função `facet_wrap`.

```{r}
milho %>% 
  ggplot(aes(method, index))+
  geom_jitter(color = "darkred", width = 0.1, alpha = 0.4)+
  stat_summary(fund.data = "mean_cl_boot", color = "black", width = 0.5)+
  facet_wrap (~hybrid)
```

### Produtividade

Para os dados relacionados à produtividade e o método de inoculação será construído um gráfico de similar ao anterior.

```{r}
milho %>% 
  ggplot(aes(method, yield))+
  geom_jitter(color = "darkred", width = 0.1, alpha = 0.4)+
  stat_summary(fund.data = "mean_cl_boot", color = "black", width = 0.5)+
  facet_wrap (~hybrid)
```

## Análise de experimentos em parcelas subdivididas

## Índice de doença (index)

### Construção do modelo

Antes de definir o modelo, será preciso transformar a coluna de dados "block" para fator (funções `mutate` e `as.factor`).

```{r}
milho <- milho %>% 
  mutate(block = as.factor(block))
```

Para a análise dos dados, será construído um modelo linear de efeitos mistos com a função `lmer` (pacote **`lme4`**), onde definimos os fatores fixos e os fatores aleatórios.

```{r}
mix <- lmer(index ~ hybrid*method + block + (1|block/hybrid),
            data = milho)
```

### ANOVA

```{r}
Anova(mix)
```

A análise de variância demonstra que há interação entre os fatores (hybrid:method). Assim seria preciso realizar os desdobramentos e comparar híbridos dentro de métodos e métodos dentro de híbridos. Mas antes, é preciso conferir se os dados atendem às pressuposições da ANOVA.

### Avaliação das premissas

```{r}
check_normality(mix)
check_heteroscedasticity(mix)
```

```{r}
plot(simulateResiduals(mix))
```

Com as análises acima, conclui-se que os dados seguem distribuição normal. Porém, não há homogeneidade de variância entre os grupos. Logo será preciso uma alternativa para prosseguir a análise, por exemplo a transformação dos dados com raiz quadrada.

### Transformação dos dados - Raiz quadrada

```{r}
mix2 <- lmer(sqrt(index) ~ hybrid*method + block + (1|block/hybrid),
            data = milho)
```

#### ANOVA - Dados transformados

```{r}
anova(mix2)
```

#### Avaliação das premissas - Dados transformados

Com as funções `check_normality` e `check_heteroscedasticity` (pacote **`Performance`**):

```{r}
check_normality(mix2)
check_heteroscedasticity(mix2)
```

Através de um gráfico Q-Q (funções `qqnorm` e `qqline`):

```{r}
qqnorm(residuals(mix2))
qqline(residuals(mix2))
```

Com a função `simulateResiduals` (pacote **`DHARMa`**):

```{r}
plot(simulateResiduals(mix2))
```

Apesar da análise via **`DHARMa`** ter apresentado problemas, as demais avaliações (via **`Performance`** e QQ-Plot) se mostraram favoráveis, logo é possível prosseguir para a comparação de médias.

#### Comparação de médias - Dados transformados

Como visto pela ANOVA, há efeito de interação, logo será preciso realizar desdobramentos para as comparações:

##### Híbridos dentro de métodos:

```{r}
index <- emmeans(mix2, ~hybrid | method,
                 type = "response")

cld(index, Letters = LETTERS)
```

##### Métodos dentro de híbridos

```{r}
index2 <- emmeans(mix2, ~method | hybrid,
                  type = "response")

cld(index2, Letters = letters)
```

## Produtividade (yield)

Seguindo os mesmos procedimentos para o índice de doença, será conduzida avaliação da produtividade.

### Construção do modelo

```{r}
mix3 <- lmer(yield ~ hybrid*method + block + (1|block/hybrid),
            data = milho)
```

### ANOVA

```{r}
Anova(mix3)
```

### Avaliação das premissas

```{r}
check_normality(mix3)
check_heteroscedasticity(mix3)
```

A análise pelas funções check_normality e check_heteroscedasticity demonstram que os dados possuem normalidade na distribuição dos resíduos, no entanto, não há homogeneidade de variância entre os grupos. Portanto, também será preciso realizar transformação.

#### Transformação dos dados - Raiz quadrada

```{r}
mix4 <- lmer(sqrt(yield) ~ hybrid*method + block + (1|block/hybrid),
            data = milho)
```

#### ANOVA - Dados transformados

```{r}
anova(mix4)
```

#### Avaliação das premissas - Dados transformados

```{r}
check_normality(mix4)
check_heteroscedasticity(mix4)
```

#### Comparação de médias - Dados transformados

##### Híbridos dentro de métodos:

```{r}
yield <- emmeans(mix4, ~ hybrid | method,
                 type = "response")
cld(index, Letters = LETTERS)
```

##### Métodos dentro de híbridos

```{r}
yield2 <- emmeans(mix4, ~ method | hybrid,
                  type = "response")
cld(index2, Letters = letters)
```
