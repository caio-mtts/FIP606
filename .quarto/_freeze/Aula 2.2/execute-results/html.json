{
  "hash": "e3f6d517bc2d8743914fe550da7ba3ca",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Aula 2\"\nformat: html\neditor: visual\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\n\n\n\n\n\n\n\n## Uso do `tidyverse` (`ggplot2`) para visualização rápida dos dados\n\nA seguir os pacotes **`tidyverse`**, **`ggplot2`** e **`ggthemes`** serão utilizados para gerar um gráfico e possibilitar uma visualização rápida de um determinado dataframe carregado.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(ggthemes)\n```\n:::\n\n\n\\\nInicialmente, será feito um gráfico simples de pontos. O objetivo é plotar as observações, de acordo com os tratamentos, e conhecer a distribuição dos dados de um determinado data frame (df4):\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng1 <- df4 %>% \n  ggplot(aes(trat, comp))+\n  geom_point()\n\ng1\n```\n\n::: {.cell-output-display}\n![](Aula-2.2_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\\\nUm segundo gráfico simples, de outro conjunto de dados:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng2 <- df1 %>%\n  ggplot(aes(growth))+\n  geom_histogram()\n\ng2\n```\n\n::: {.cell-output-display}\n![](Aula-2.2_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\\\nA seguir, será feito um novo plot. Este, consistirá de um gráfico do tipo boxplot, acrescido de pontos dispersos:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng3 <- df4 %>%\n  ggplot(aes(trat, comp))+\n  geom_boxplot(outlier.alpha = 0)+\n  geom_jitter(width = 0.07,\n              color = \"black\",\n              shape = 1,\n              size = 2)+\n  scale_y_continuous(limits = c(0,20), n.breaks = 10)+\n  #ylim(0,20)+\n  labs(x = \"Tratamento\", y = \"Comprimento\", title = \"Boxplot\", caption = \"Fonte: Primeiro Boxplot\")+\n  theme_clean()\n\ng3\n```\n\n::: {.cell-output-display}\n![](Aula-2.2_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\\\nPor fim, para salvar os gráficos gerados, podemos utilizar a função `ggsave`. Porém, essa função salvará o último gráfico gerado.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"Boxplot.png\", bg=\"transparent\")\n```\n:::\n\n\n\\\nOutra opção para salvar plots gerados anteriormente é a seguinte:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Em .pdf:\npdf(\"histograma.pdf\", bg = \"transparent\")\nprint(g2)\ndev.off()\n\n#Em .png:\npng(\"Pontos.png\", bg = \"transparent\")\nprint(g1)\ndev.off()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}