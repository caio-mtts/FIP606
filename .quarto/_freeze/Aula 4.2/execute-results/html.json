{
  "hash": "4f60b681d34678ff30abe6327120d179",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Aula 4\"\nformat: html\neditor: visual\nexecute: \n  error: false\n  warning: false\n---\n\n\n\n\n\n\n## Tabela de contingência\n\nA seguir, serão construídas tabelas de contingências. São tabelas que permitem fazer contagens de elementos/ ocorrências de variáveis categóricas dentro de uma mesma coluna rapidamente.\n\n### Carregando os dados\n\nOs dados utilizados neste exemplo serão obtidos de uma planilha on-line:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr <- read.csv(\"https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv\")\n```\n:::\n\n\n### Utilizando a função `count`\n\nUtilizando a função `count` `(dplyr)` é possível contar os valores únicos (níveis) dentro de uma coluna específica (fator).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr %>%\n  count(region)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  region   n\n1 Oromia 165\n2  SNNPR 240\n```\n\n\n:::\n\n```{.r .cell-code}\ncr %>% \n  count(zone)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          zone  n\n1         Bale 30\n2   Bench Maji 45\n3        Gedio 45\n4  Ilu AbaBora 45\n5        Jimma 45\n6        Keffa 45\n7        Sheka 45\n8       Sidama 60\n9 West Wellega 45\n```\n\n\n:::\n:::\n\n\n\\\nTambém é possível contar as ocorrências únicas combinando dois fatores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr %>%\n  count(region,zone)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  region         zone  n\n1 Oromia         Bale 30\n2 Oromia  Ilu AbaBora 45\n3 Oromia        Jimma 45\n4 Oromia West Wellega 45\n5  SNNPR   Bench Maji 45\n6  SNNPR        Gedio 45\n7  SNNPR        Keffa 45\n8  SNNPR        Sheka 45\n9  SNNPR       Sidama 60\n```\n\n\n:::\n:::\n\n\n### Utilizando a função `tabyl`\n\nDentro do pacote `janitor` há a função `tabyl`, que gera uma tabela de frequências\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr %>% \n  tabyl(region)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n region   n   percent\n Oromia 165 0.4074074\n  SNNPR 240 0.5925926\n```\n\n\n:::\n\n```{.r .cell-code}\ncr %>% \n  tabyl(cultivar, farm_management)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n cultivar Intensive Minimal Moderate Unmanaged\n Improved        83       0        0         0\n    Local         0      10        4       102\n  Mixture        82      59       65         0\n```\n\n\n:::\n:::\n\n\n### Gráficos de barras (colunas)\n\nPara avaliar visualmente a ocorrência dos tipos de manejo para cada cultivar, construiremos um gráfico de barras:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr %>%\n  count(farm_management, cultivar) %>% \n  ggplot(aes(cultivar, n, fill = farm_management))+\n  geom_col(position = \"dodge2\")\n```\n\n::: {.cell-output-display}\n![](Aula-4.2_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nTambém é possível construir um gráfico com a mesma ideia utilizando a função `facet_wrap`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr %>%\n  count(farm_management, cultivar) %>% \n  ggplot(aes(cultivar, n, fill = farm_management, label = n))+\n  geom_col(position = \"dodge2\")+\n  geom_text(position = position_dodge(width = 0.9))+\n  theme_bw()+\n  facet_wrap(~cultivar, scales = \"free_x\")+\n    theme(strip.text.x = element_blank(),\n          legend.position = \"top\")\n```\n\n::: {.cell-output-display}\n![](Aula-4.2_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\\\n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gsheet)\ndata <- gsheet::gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1aID5Dh6PlBVCKzU1j7k-WA6zuWQWE2NhtWEgdJtt5iA/edit#gid=921203844\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %>%\n  group_by(trat) %>%\n  ggplot(aes(trat, comp))+\n  geom_jitter(width = 0.1)\n```\n\n::: {.cell-output-display}\n![](Aula-4.2_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %>%\n  group_by(trat) %>%\n  summarise(mean_comp = mean(comp),\n            sd_comp = sd(comp)) %>%\n  ggplot(aes(trat, mean_comp))+\n  #geom_col(fill = \"steelblue\", width = 0.5)+\n  geom_point(size = 2)+\n  ylim (5,20)+\n  geom_errorbar(aes(ymin = mean_comp - sd_comp,\n                    ymax = mean_comp + sd_comp),\n                width = 0.2)+\n  annotate(geom = \"text\",\n           x = 1,\n           y = 18,\n           label = \"*\", size =5)+\n  labs(\n    y = \"Mean Comp\")\n```\n\n::: {.cell-output-display}\n![](Aula-4.2_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}