{
  "hash": "6637fc3a598532840b75c71b9730dbe5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Aula 10 - Modelo não-linear - Cálculo de EC50\"\nformat: html\neditor: visual\nexecute: \n  error: false\n  warning: false\n---\n\n\n\n\n\n\n\n\n\n\n## Modelo não-linear\n\nNa fitopatologia, modelos não-lineares podem ser utilizados para a construção de curvas de EC~50~.\n\n### Importação e preparação dos dados para análise\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfung <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=465348652\")\n```\n:::\n\n\nCálculo da média de germinação em função do isolado.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfung2 <- fung %>% \n  group_by(code, dose) %>% \n  summarise(mean_germ = mean(germination))\n```\n:::\n\n\n\\\nVisualização da média de germinação com gráfico de pontos\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfung2 %>% \n  ggplot(aes(dose, mean_germ))+\n  geom_point()+\n  facet_wrap(~ code)\n```\n\n::: {.cell-output-display}\n![](Aula-10.3_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n### Modelagem da EC~50~ (modelo não-linear)\n\nPara modelar a EC~50~ será utilizado o pacote **`drc`**, com a função `drm`.\n\nAntes, é preciso criar um novo objeto somente com os dados do isolado selecionado (ex.: FGT05). Em seguida, definimos na função `drm` que a germinação média será modela em função da dose, qual o conjunto de dados (`data = FGT05`) e qual a função utilizada (no caso, `fct = LL.3()`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(drc)\n\nFGT05 <- fung2 %>% \n  filter(code ==\"FGT05\")\n\ndrc_fgt05 <- drm(mean_germ ~ dose,\n                 data = FGT05,\n                 fct = LL.3())\n\nsummary(drc_fgt05)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0 (3 parms)\n\nParameter estimates:\n\n               Estimate Std. Error t-value   p-value    \nb:(Intercept)  0.769933   0.198566  3.8775 0.0303750 *  \nd:(Intercept) 44.924753   3.261699 13.7734 0.0008283 ***\ne:(Intercept)  0.044839   0.019291  2.3243 0.1026764    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 3.253867 (3 degrees of freedom)\n```\n\n\n:::\n\n```{.r .cell-code}\nAIC(drc_fgt05)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 35.02651\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(drc_fgt05)\n```\n\n::: {.cell-output-display}\n![](Aula-10.3_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nÉ importante definir a função para comparar os modelos e selecionar aquele mais simples (com menor AIC).\n\n### Cálculo de EC~50~\n\nSerá utilizada a função `ED` pacote (**`drc`**).\n\nSeleciona-se o objeto, o valor da varíavel resposta (50), e o tipo de intervalo de confiança que será apresentado.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nED(drc_fgt05, 50, interval = \"delta\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nEstimated effective doses\n\n        Estimate Std. Error     Lower     Upper\ne:1:50  0.044839   0.019291 -0.016554  0.106231\n```\n\n\n:::\n:::\n\n\nNo caso, a dose que inibe 50% da germinação de conídios foi estimada em 0.04, com -0.01 \\< IC \\< 0.10.\n\n#### Outros exemplos\n\n\n::: {.cell}\n\n```{.r .cell-code}\nI_165 <- fung2 %>% \n  filter(code ==\"165\")\n\ndrc_165 <- drm(mean_germ ~ dose,\n                 data = I_165,\n                 fct = LL.3())\n\nsummary(drc_165)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0 (3 parms)\n\nParameter estimates:\n\n              Estimate Std. Error t-value   p-value    \nb:(Intercept)  1.21560    0.26679  4.5564 0.0198145 *  \nd:(Intercept) 36.14322    1.97554 18.2954 0.0003563 ***\ne:(Intercept)  0.55840    0.11420  4.8898 0.0163598 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 2.436519 (3 degrees of freedom)\n```\n\n\n:::\n\n```{.r .cell-code}\nAIC(drc_165)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 31.55522\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(drc_165)\n```\n\n::: {.cell-output-display}\n![](Aula-10.3_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\nED(drc_165,50, interval = \"delta\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nEstimated effective doses\n\n       Estimate Std. Error   Lower   Upper\ne:1:50  0.55840    0.11420 0.19498 0.92182\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nI_186 <- fung2 %>% \n  filter(code ==\"186\")\n\ndrc_186 <- drm(mean_germ ~ dose,\n                 data = I_186,\n                 fct = LL.3())\n\nsummary(drc_186)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0 (3 parms)\n\nParameter estimates:\n\n               Estimate Std. Error t-value   p-value    \nb:(Intercept)  4.997636   0.542650  9.2097  0.002708 ** \nd:(Intercept) 48.750109   0.721642 67.5545 7.148e-06 ***\ne:(Intercept)  0.579757   0.013332 43.4853 2.677e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 1.020525 (3 degrees of freedom)\n```\n\n\n:::\n\n```{.r .cell-code}\nAIC(drc_186)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 21.11219\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(drc_186)\n```\n\n::: {.cell-output-display}\n![](Aula-10.3_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n```{.r .cell-code}\nED(drc_186, 50, interval = \"delta\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nEstimated effective doses\n\n       Estimate Std. Error    Lower    Upper\ne:1:50 0.579757   0.013332 0.537328 0.622187\n```\n\n\n:::\n:::\n\n\n### Calculando os EC~50~ de uma só vez\n\nPelo método anterior, é preciso modelar o EC~50~ individualmente, o que pode ser trabalhoso, dependendo do número de amostras. Assim, o pacote **`ec50estimator`** é útil nessa situações, pois permite modelar, calcular a EC~50~ e o IC de todos os tratamento de uma só vez.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ec50estimator)\n\ndf_ec50 <- estimate_EC50(mean_germ~dose,\n                         data = fung2,\n                         isolate_col = \"code\",\n                         interval = \"delta\",\n                         fct = drc::LL.3())\nview(df_ec50)\n\nlibrary(DT)\ndatatable(df_ec50)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-c907a6891cd23f25b76f\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-c907a6891cd23f25b76f\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"datacontainer\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>ID<\\/th>\\n      <th>strata<\\/th>\\n      <th>Estimate<\\/th>\\n      <th>Std..Error<\\/th>\\n      <th>Lower<\\/th>\\n      <th>Upper<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[3,4,5,6]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"ID\",\"targets\":1},{\"name\":\"strata\",\"targets\":2},{\"name\":\"Estimate\",\"targets\":3},{\"name\":\"Std..Error\",\"targets\":4},{\"name\":\"Lower\",\"targets\":5},{\"name\":\"Upper\",\"targets\":6}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\nProblema, não é possível selecionar a função de cada modelo para melhor se adequar a cada tratamento.\n\nGráfico com as doses de EC~50~ e intervalo de confiança:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_ec50 %>% \n  ggplot(aes(reorder(ID, Estimate), Estimate))+\n  geom_point()+\n  geom_errorbar(aes(ymin = Lower,\n                    ymax = Upper),\n                width = 0.1)+\n  ylim (0, 1.2)+\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](Aula-10.3_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nArgumento `reorder(ID, Estimate), Estimate` , utilizado para ordenar os tratamentos em função da resposta (ordem crescente).\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}