{
  "hash": "88ed43faf9c2da3f64fe0a8e8276118b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Aula 2 - Importação de dados e criação de gráficos simples\"\nauthor: \"Caio\"\nformat: html\neditor: visual\neditor_options: \n  chunk_output_type: console\n---\n\n\n# Aula 2\n\nNesta aula serão apresentadas formas de se importar (carregar) dados/ planilhas, a partir de diferentes fontes, e como fazer uma análise visual rápida dos dados obtidos.\n\n## Importando dados/ planilhas\n\nOs dados/ planilhas podem ser obtidos de diferentes formas.\\\nInicialmente, será carregado um conjunto de dados presente em um pacote do R (**`ec50estimator`**):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ec50estimator)\n\ndf1 <- multi_isolate\nhead(df1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  isolate   field   fungicida  dose     growth\n1       1 Organic Fungicide A 0e+00 20.2082399\n2       1 Organic Fungicide A 1e-05 20.1168279\n3       1 Organic Fungicide A 1e-04 19.2479678\n4       1 Organic Fungicide A 1e-03 15.8123455\n5       1 Organic Fungicide A 1e-02  7.3206757\n6       1 Organic Fungicide A 1e-01  0.6985264\n```\n\n\n:::\n:::\n\n\n\\\nUma outra maneira, é carregar dados de uma planilha em Excel. Para isso, existem duas alternativas. A primeira faz uso do pacote **`readxl`**.\\\n\\\nOBS.: Para as opções apresentadas a seguir, é importante mencionar que o arquivo a ser importado deve estar dentro da pasta do projeto.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\ndf2 <- read_excel(\"dados-diversos.xlsx\")\nhead(df2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  trat    rep  comp\n  <chr> <dbl> <dbl>\n1 Mg2       1   9  \n2 Mg2       2  12.5\n3 Mg2       3  10  \n4 Mg2       4   8  \n5 Mg2       5  13.2\n6 Mg2       6  11  \n```\n\n\n:::\n:::\n\n\n\\\nQuando uma planilha possui mais de uma guia, é necessário indicar na função qual a guia que desejamos importar:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf21 <- read_excel(\"dados-diversos.xlsx\", sheet = \"escala\")\nhead(df21)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 7\n  assessment rater acuracia precisao vies_geral vies_sistematico vies_constante\n  <chr>      <chr>    <dbl>    <dbl>      <dbl>            <dbl>          <dbl>\n1 Unaided    A        0.809    0.826      0.979            1.19         0.112  \n2 Unaided    B        0.722    0.728      0.991            0.922       -0.106  \n3 Unaided    C        0.560    0.715      0.783            1.16         0.730  \n4 Unaided    D        0.818    0.819      0.999            0.948       -0.00569\n5 Unaided    E        0.748    0.753      0.993            1.10         0.0719 \n6 Unaided    F        0.695    0.751      0.925            0.802        0.336  \n```\n\n\n:::\n:::\n\n\n\\\nA segunda forma de importação, faz uso do pacote **`tidyverse`**, com a função `read_csv`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ndf3 <- read_csv(\"dados-diversos.csv\")\nhead(df3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  Irrigation   rep   day severity\n  <chr>      <dbl> <dbl>    <dbl>\n1 Furrow         1     0     0.01\n2 Furrow         2     0     0.01\n3 Furrow         3     0     0.01\n4 Furrow         1     7     0.04\n5 Furrow         2     7     0.04\n6 Furrow         3     7     0.04\n```\n\n\n:::\n:::\n\n\n\\\nA terceira forma de se carregar dados é a partir de uma planilha google, disponível online.\\\nPara isso, fazemos uso do pacote **`gsheet`**:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gsheet)\ndf4 <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1aID5Dh6PlBVCKzU1j7k-WA6zuWQWE2NhtWEgdJtt5iA/edit#gid=921203844\")\nhead(df4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  trat    rep  comp\n  <chr> <dbl> <dbl>\n1 Mg2       1   9  \n2 Mg2       2  12.5\n3 Mg2       3  10  \n4 Mg2       4   8  \n5 Mg2       5  13.2\n6 Mg2       6  11  \n```\n\n\n:::\n\n```{.r .cell-code}\ndf5 <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1aID5Dh6PlBVCKzU1j7k-WA6zuWQWE2NhtWEgdJtt5iA/edit#gid=517586736\")\nhead(df5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  especie   rep   tcm\n  <chr>   <dbl> <dbl>\n1 Fasi        1  1.5 \n2 Fasi        2  1.59\n3 Fasi        3  1.52\n4 Fasi        4  1.52\n5 Fasi        5  1.6 \n6 Fasi        6  1.56\n```\n\n\n:::\n:::\n\n\n## Uso do `tidyverse` (`ggplot2`) para visualização rápida dos dados\n\nA seguir os pacotes **`tidyverse`**, **`ggplot2`** e **`ggthemes`** serão utilizados para gerar um gráfico e possibilitar uma visualização rápida de um determinado dataframe carregado.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(ggthemes)\n```\n:::\n\n\n\\\nInicialmente, será feito um gráfico simples de pontos. O objetivo é plotar as observações, de acordo com os tratamentos, e conhecer a distribuição dos dados de um determinado data frame (df4):\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng1 <- df4 %>% \n  ggplot(aes(trat, comp))+\n  geom_point()\n\ng1\n```\n\n::: {.cell-output-display}\n![](Aula-2_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\\\nUm segundo gráfico simples, de outro conjunto de dados:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng2 <- df1 %>%\n  ggplot(aes(growth))+\n  geom_histogram()\n\ng2\n```\n\n::: {.cell-output-display}\n![](Aula-2_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\\\nA seguir, será feito um novo plot. Este, consistirá de um gráfico do tipo boxplot, acrescido de pontos dispersos:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng3 <- df4 %>%\n  ggplot(aes(trat, comp))+\n  geom_boxplot(outlier.alpha = 0)+\n  geom_jitter(width = 0.07,\n              color = \"black\",\n              shape = 1,\n              size = 2)+\n  scale_y_continuous(limits = c(0,20), n.breaks = 10)+\n  #ylim(0,20)+\n  labs(x = \"Tratamento\", y = \"Comprimento\", title = \"Boxplot\", caption = \"Fonte: Primeiro Boxplot\")+\n  theme_clean()\n\ng3\n```\n\n::: {.cell-output-display}\n![](Aula-2_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\\\nPor fim, para salvar os gráficos gerados, podemos utilizar a função `ggsave`. Porém, essa função salvará o último gráfico gerado.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"Boxplot.png\", bg=\"transparent\")\n```\n:::\n\n\n\\\nOutra opção para salvar plots gerados anteriormente é a seguinte:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Em .pdf:\npdf(\"histograma.pdf\", bg = \"transparent\")\nprint(g2)\ndev.off()\n\n#Em .png:\npng(\"Pontos.png\", bg = \"transparent\")\nprint(g1)\ndev.off()\n```\n:::\n",
    "supporting": [
      "Aula-2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}