{"title":"Aula 11","markdown":{"yaml":{"title":"Aula 11","format":"html","editor":"visual","execute":{"error":false,"warning":false,"message":false,"freeze":true}},"headingText":"Carregando os pacotes","containsRefs":false,"markdown":"\n\n```{css}\n#| echo: false \np {\n  text-align: justify \n}\n```\n\nNesta aula, serão apresentadas formas de confeccionar mapas utilizando o R. Além dos pacotes comumente utilizados até o momento, três novos serão essenciais: `rnaturalearth`, `rnaturalearthhires` e `ggspatial`.\n\n\n```{r}\n#| eval: FALSE\n#| output: FALSE\n#| mmessage: FALSE\n\n\n#Para instalar o pacote rnaturalearthhires:\nremotes::install_github(\"ropensci/rnaturalearthhires\")\ninstall.packages(\"rnaturalearthhires\", repos = \"https://ropensci.r-universe.dev\", type = \"source\")\n```\n\n```{r}\nlibrary(tidyverse)\nlibrary(gsheet)\nlibrary(ggthemes)\nlibrary(r4pde)\nlibrary(ggspatial)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthhires)\nlibrary(plotly)\n```\n\n## Criando mapas\n\n### Mapa-múndi\n\nPara criação de um mapa simples, faremos uso de dois pacotes: `rnaturalearth` e `ggplot`.\n\nCom a função `ne_countries`, é possível criar mapa-múndi, mapas de continentes ou países. Um vez definida a região, a função `geom_sf` é utilizada para visualização de objetos \"*simple feature*\" (sf).\n\n```{r}\nWORLD <- ne_countries()\n\nggplot(WORLD)+\n  geom_sf()+\n  theme_map()\n```\n\nPara criar um mapa destacando um continente ou país, por exemplo, utilizamos os argumentos `continent` ou `country`, respectivamente:\n\n```{r}\nAS <- ne_countries(continent = \"Asia\")\n\nggplot(AS)+\n  geom_sf()+\n  theme_map()\n```\n\n\\\nPara criar um mapa-múndi com países selecionados em destaque:\n\n```{r}\n# Definindo os países a serem destacados\nWORLD_destaque <- c(\"Brazil\", \"China\", \"France\", \"Ethiopia\", \"Australia\")\n\n# Criando uma coluna para identificar os países selecionados\nWORLD$destaque <- ifelse(WORLD$name %in% WORLD_destaque, \"destaque\", \"normal\")\n\n# Plotando o mapa com os países destacados\nggplot(data = WORLD) +\n  geom_sf(aes(fill = destaque), color = \"black\", show.legend = FALSE) +\n  scale_fill_manual(values = c(\"destaque\" = \"darkred\", \"normal\" = \"white\")) +\n  theme_map ()\n```\n\n### Mapas de países\n\nPara criar um mapa de um país, é utilizada a função `ne_states`, incluindo o argumento `country` em que é definido o país de interesse.\n\n```{r}\nBRA <- ne_states(country = \"Brazil\",\n                 returnclass = c(\"sf\"))\n\nggplot(BRA) + \n  geom_sf(fill = \"white\",\n          color = \"black\")#+\n  #theme_map()\n```\n\nA partir do objeto criado anteriormente, é possível criar um mapa destacando um estado ou localidade de interesse. Para isso, é criado um novo objeto, filtrando o estado de interesse, por exemplo, Minas Gerais:\n\n```{r}\nMG <- BRA %>% \n  filter(name_en == \"Minas Gerais\")\n```\n\nMapa com o estado em destaque:\n\n```{r}\nggplot(BRA) +\ngeom_sf(color = \"black\",\n          fill = \"white\") +\n  geom_sf(data = MG, \n          color = \"lightgrey\",\n          fill = \"darkred\")\n```\n\nMapa de um estado:\n\n```{r}\nggplot(MG) +\n  geom_sf(fill = \"white\")\n```\n\n## Criando mapas interativos\n\nCom o R, também é possível criarmos mapas interativos, seja com a função `ggplotly` (**`plotly`**) ou com a função `leaflet` (**`leaflet`**).\n\n#### Com `plotly`\n\n```{r}\nBR_int <- ggplot(BRA) +\n  geom_sf(fill = \"white\",\n          color = \"black\",\n          linewidth = 0.3)+\n  theme_map()\n\nggplotly(BR_int)\n```\n\n#### Com `leaflet`\n\nCom a função `leaflet` é possível criar mapas de localidades específicas. Para isso, é preciso conhecer a latitude e a longitude do local de interesse.\n\nSerá usado como exemplo a longitude e latitude de Viçosa (lng = -42.8825, lat = -20.7546).\n\n```{r}\nlibrary(leaflet)\n\nleaflet() %>% \n  addTiles() %>% \n  setView(lng = -42.8825, lat = -20.7546, zoom = 13)\n```\n\nOs mapas gerados pela função `leaflet` são customizáveis e uma opção interessante é utilizar visuais (aparências) de terceiros, o que é possível com a função `addProviderTiles`. Uma lista de opções pode ser encontrada em \"*providers*\".\n\n```{r}\nleaflet() %>% \n  addProviderTiles(providers$OpenStreetMap.Mapnik) %>% \n  setView(lng = -42.87127507493794, lat = -20.758814863222565, zoom = 18)\n```\n\n## Mapas interativos com pontos\n\nPara criar um mapa com pontos é preciso que no conjunto de dados existam colunas identificadas como \"latitude\" (ou lat) e longitutude\" (ou lgn). Essas coordenadas serão necessárias para plotar (`geom_point`) os pontos no gráfico.\n\n```{r}\nsbr <- r4pde::RustSoybean\n```\n\n```{r}\nBR_int <- ggplot(BRA) +\n  geom_sf(fill = \"white\",\n          color = \"black\",\n          linewidth = 0.3)+\n  geom_point(data = sbr,\n             aes(longitude, latitude),\n             color = \"darkred\")+\n  theme_map()\n\nggplotly(BR_int)\n```\n\nO mesmo pode ser feito com a função `leaflet`. No entanto, nesse caso, é preciso identificar o conjunto de dados e utilizar uma segunda função (`addCircleMarkers`) que permitirá adicionar a camada com os pontos.\n\n```{r}\nleaflet(sbr,\n        options = leafletOptions(minZoom = 4,\n                                 maxZoom = 6)) %>% \n  addTiles() %>% \n #comando que permite centralizar o mapa em um local:\n #setView(lng = -42.8825, lat = -20.7546, zoom = 4) %>% \n  addCircleMarkers(radius = 5,\n                   stroke = FALSE)\n```\n\n## Criando mapas associados a gráficos\n\nPara exemplificar essa aplicação, será utilizado um conjunto de dados que relata a ocorrência de doenças em determinadas localidades.\n\n```{r}\ndata <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1pAIFKsdKxk_UQQXdYwIO-O5NOkYNhpclImJcLziYnk4/edit#gid=50258992\")\n```\n\nAlém disso, dois novos pacotes serão utilizados:\n\n**`ggrepel`**, função que permite adicionar nomes aos pontos de latitude e longitude.\n\n**`scatterpie`**, função que transforma os pontos em um gráfico de pizza, em função das variáveis.\n\n```{r}\nlibrary(ggrepel)\nlibrary(scatterpie)\n```\n\n### Criando o mapa\n\n```{r}\nggplot(BRA) +\n  geom_sf(fill = \"gray70\", alpha = 0.5, color = \"white\") +\n  coord_sf()+\n  geom_scatterpie(aes(x = lon, y = lat, r = 0.6), alpha = 0.8, color = NA, data = data,\n                  cols = c(\"DFC\",\n                           \"MA\",\n                           \"FER\",\n                           \"ANTR\",\n                           \"OIDIO\"))+\n  geom_text_repel(data = data, aes(lon, lat, label = Local),\n                   size = 2, nudge_x = 0.2, nudge_y = 0.27, color = \"gray30\", family = \"Arial\") +\n  ggthemes::scale_fill_calc()+\n  ggthemes::theme_map() +\n  labs(x = \"Longitude\", \n       y = \"Latitude\", \n       legend = \"\", \n       fill = \"Doença\")+\n  theme(legend.position = \"bottom\", \n        text = element_text(family = \"Arial\", size = 8))\n```\n","srcMarkdownNoYaml":"\n\n```{css}\n#| echo: false \np {\n  text-align: justify \n}\n```\n\nNesta aula, serão apresentadas formas de confeccionar mapas utilizando o R. Além dos pacotes comumente utilizados até o momento, três novos serão essenciais: `rnaturalearth`, `rnaturalearthhires` e `ggspatial`.\n\n## Carregando os pacotes\n\n```{r}\n#| eval: FALSE\n#| output: FALSE\n#| mmessage: FALSE\n\n\n#Para instalar o pacote rnaturalearthhires:\nremotes::install_github(\"ropensci/rnaturalearthhires\")\ninstall.packages(\"rnaturalearthhires\", repos = \"https://ropensci.r-universe.dev\", type = \"source\")\n```\n\n```{r}\nlibrary(tidyverse)\nlibrary(gsheet)\nlibrary(ggthemes)\nlibrary(r4pde)\nlibrary(ggspatial)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthhires)\nlibrary(plotly)\n```\n\n## Criando mapas\n\n### Mapa-múndi\n\nPara criação de um mapa simples, faremos uso de dois pacotes: `rnaturalearth` e `ggplot`.\n\nCom a função `ne_countries`, é possível criar mapa-múndi, mapas de continentes ou países. Um vez definida a região, a função `geom_sf` é utilizada para visualização de objetos \"*simple feature*\" (sf).\n\n```{r}\nWORLD <- ne_countries()\n\nggplot(WORLD)+\n  geom_sf()+\n  theme_map()\n```\n\nPara criar um mapa destacando um continente ou país, por exemplo, utilizamos os argumentos `continent` ou `country`, respectivamente:\n\n```{r}\nAS <- ne_countries(continent = \"Asia\")\n\nggplot(AS)+\n  geom_sf()+\n  theme_map()\n```\n\n\\\nPara criar um mapa-múndi com países selecionados em destaque:\n\n```{r}\n# Definindo os países a serem destacados\nWORLD_destaque <- c(\"Brazil\", \"China\", \"France\", \"Ethiopia\", \"Australia\")\n\n# Criando uma coluna para identificar os países selecionados\nWORLD$destaque <- ifelse(WORLD$name %in% WORLD_destaque, \"destaque\", \"normal\")\n\n# Plotando o mapa com os países destacados\nggplot(data = WORLD) +\n  geom_sf(aes(fill = destaque), color = \"black\", show.legend = FALSE) +\n  scale_fill_manual(values = c(\"destaque\" = \"darkred\", \"normal\" = \"white\")) +\n  theme_map ()\n```\n\n### Mapas de países\n\nPara criar um mapa de um país, é utilizada a função `ne_states`, incluindo o argumento `country` em que é definido o país de interesse.\n\n```{r}\nBRA <- ne_states(country = \"Brazil\",\n                 returnclass = c(\"sf\"))\n\nggplot(BRA) + \n  geom_sf(fill = \"white\",\n          color = \"black\")#+\n  #theme_map()\n```\n\nA partir do objeto criado anteriormente, é possível criar um mapa destacando um estado ou localidade de interesse. Para isso, é criado um novo objeto, filtrando o estado de interesse, por exemplo, Minas Gerais:\n\n```{r}\nMG <- BRA %>% \n  filter(name_en == \"Minas Gerais\")\n```\n\nMapa com o estado em destaque:\n\n```{r}\nggplot(BRA) +\ngeom_sf(color = \"black\",\n          fill = \"white\") +\n  geom_sf(data = MG, \n          color = \"lightgrey\",\n          fill = \"darkred\")\n```\n\nMapa de um estado:\n\n```{r}\nggplot(MG) +\n  geom_sf(fill = \"white\")\n```\n\n## Criando mapas interativos\n\nCom o R, também é possível criarmos mapas interativos, seja com a função `ggplotly` (**`plotly`**) ou com a função `leaflet` (**`leaflet`**).\n\n#### Com `plotly`\n\n```{r}\nBR_int <- ggplot(BRA) +\n  geom_sf(fill = \"white\",\n          color = \"black\",\n          linewidth = 0.3)+\n  theme_map()\n\nggplotly(BR_int)\n```\n\n#### Com `leaflet`\n\nCom a função `leaflet` é possível criar mapas de localidades específicas. Para isso, é preciso conhecer a latitude e a longitude do local de interesse.\n\nSerá usado como exemplo a longitude e latitude de Viçosa (lng = -42.8825, lat = -20.7546).\n\n```{r}\nlibrary(leaflet)\n\nleaflet() %>% \n  addTiles() %>% \n  setView(lng = -42.8825, lat = -20.7546, zoom = 13)\n```\n\nOs mapas gerados pela função `leaflet` são customizáveis e uma opção interessante é utilizar visuais (aparências) de terceiros, o que é possível com a função `addProviderTiles`. Uma lista de opções pode ser encontrada em \"*providers*\".\n\n```{r}\nleaflet() %>% \n  addProviderTiles(providers$OpenStreetMap.Mapnik) %>% \n  setView(lng = -42.87127507493794, lat = -20.758814863222565, zoom = 18)\n```\n\n## Mapas interativos com pontos\n\nPara criar um mapa com pontos é preciso que no conjunto de dados existam colunas identificadas como \"latitude\" (ou lat) e longitutude\" (ou lgn). Essas coordenadas serão necessárias para plotar (`geom_point`) os pontos no gráfico.\n\n```{r}\nsbr <- r4pde::RustSoybean\n```\n\n```{r}\nBR_int <- ggplot(BRA) +\n  geom_sf(fill = \"white\",\n          color = \"black\",\n          linewidth = 0.3)+\n  geom_point(data = sbr,\n             aes(longitude, latitude),\n             color = \"darkred\")+\n  theme_map()\n\nggplotly(BR_int)\n```\n\nO mesmo pode ser feito com a função `leaflet`. No entanto, nesse caso, é preciso identificar o conjunto de dados e utilizar uma segunda função (`addCircleMarkers`) que permitirá adicionar a camada com os pontos.\n\n```{r}\nleaflet(sbr,\n        options = leafletOptions(minZoom = 4,\n                                 maxZoom = 6)) %>% \n  addTiles() %>% \n #comando que permite centralizar o mapa em um local:\n #setView(lng = -42.8825, lat = -20.7546, zoom = 4) %>% \n  addCircleMarkers(radius = 5,\n                   stroke = FALSE)\n```\n\n## Criando mapas associados a gráficos\n\nPara exemplificar essa aplicação, será utilizado um conjunto de dados que relata a ocorrência de doenças em determinadas localidades.\n\n```{r}\ndata <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1pAIFKsdKxk_UQQXdYwIO-O5NOkYNhpclImJcLziYnk4/edit#gid=50258992\")\n```\n\nAlém disso, dois novos pacotes serão utilizados:\n\n**`ggrepel`**, função que permite adicionar nomes aos pontos de latitude e longitude.\n\n**`scatterpie`**, função que transforma os pontos em um gráfico de pizza, em função das variáveis.\n\n```{r}\nlibrary(ggrepel)\nlibrary(scatterpie)\n```\n\n### Criando o mapa\n\n```{r}\nggplot(BRA) +\n  geom_sf(fill = \"gray70\", alpha = 0.5, color = \"white\") +\n  coord_sf()+\n  geom_scatterpie(aes(x = lon, y = lat, r = 0.6), alpha = 0.8, color = NA, data = data,\n                  cols = c(\"DFC\",\n                           \"MA\",\n                           \"FER\",\n                           \"ANTR\",\n                           \"OIDIO\"))+\n  geom_text_repel(data = data, aes(lon, lat, label = Local),\n                   size = 2, nudge_x = 0.2, nudge_y = 0.27, color = \"gray30\", family = \"Arial\") +\n  ggthemes::scale_fill_calc()+\n  ggthemes::theme_map() +\n  labs(x = \"Longitude\", \n       y = \"Latitude\", \n       legend = \"\", \n       fill = \"Doença\")+\n  theme(legend.position = \"bottom\", \n        text = element_text(family = \"Arial\", size = 8))\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":true,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"Aula 11.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.553","editor":"visual","theme":"navbars","title":"Aula 11"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}