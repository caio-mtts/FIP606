{
  "hash": "47d9e1ac09e05ffb137d2cd30b20f3d9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Uso do datapasta\"\nauthor: \"Caio\"\nformat: html\neditor: visual\nexecute: \n  error: false\n  warning: false\n---\n\n\n# Aula 4\n\nNesta aula, serão apresentados diversas operações com dados `datapasta`, para copiar e colar dados como vetores, data frames e tribbles. Além disso, serão feitas tabelas de contingência e gráficos de barras para análise de dados categóricos, utilizando as funções `count` e `tabyl` do pacote `janitor`.\n\n## Carregando os pacotes\n\nInicialmente, serão instalados (**`datapasta`** e **`janitor`**) e carregados os pacotes que serão necessários durante esta aula:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"datapasta\")\ninstall.packages(\"janitor\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(datapasta)\nlibrary(janitor)\nlibrary(tidyverse)\nlibrary(ggthemes)\n```\n:::\n\n\n## Pacote `datapasta`\n\nO pacote `datapasta` fornece ao RStudio funções adicionais que permitem copiar e colar dados de outras fontes.\n\nPara usá-lo é preciso criar um novo chunk, copiar os valores desejados, clicar em `Addins` e selecionar o formato em que os valores serão colados.\n\n### *Paste as vector*\n\nPara colar valores como um vetor, seleciona-se \"*Paste as vector*\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvet <- c(\"comp\", \"9\", \"12.5\", \"10\", \"8\", \"13.2\", \"11\", \"10.8\", \"9.5\", \"10.8\", \"10.4\", \"13.72\", \"15.91\", \"15.7\", \"14.2\", \"15.9\", \"16.54\", \"18\", \"14.4\", \"16.41\", \"16\")\n```\n:::\n\n\n### *Paste as data.frame*\n\nAlém disso, também é possível colar valores como um data frame. Nesse caso, valores presentes em mais de uma coluna são copiados e colados selecionando a função \"*Paste as data.frame*\":\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- data.frame(\n  stringsAsFactors = FALSE,\n                     trat = c(\"Mg2\",\"Mg2\",\n                              \"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\n                              \"Mg2\",\"control\",\"control\",\"control\",\"control\",\n                              \"control\",\"control\",\"control\",\"control\",\"control\",\n                              \"control\"),\n                      rep = c(1L,2L,3L,4L,\n                              5L,6L,7L,8L,9L,10L,1L,2L,3L,4L,5L,6L,7L,\n                              8L,9L,10L),\n                     comp = c(9,12.5,10,8,\n                              13.2,11,10.8,9.5,10.8,10.4,13.72,15.91,15.7,\n                              14.2,15.9,16.54,18,14.4,16.41,16))\n\ndat\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      trat rep  comp\n1      Mg2   1  9.00\n2      Mg2   2 12.50\n3      Mg2   3 10.00\n4      Mg2   4  8.00\n5      Mg2   5 13.20\n6      Mg2   6 11.00\n7      Mg2   7 10.80\n8      Mg2   8  9.50\n9      Mg2   9 10.80\n10     Mg2  10 10.40\n11 control   1 13.72\n12 control   2 15.91\n13 control   3 15.70\n14 control   4 14.20\n15 control   5 15.90\n16 control   6 16.54\n17 control   7 18.00\n18 control   8 14.40\n19 control   9 16.41\n20 control  10 16.00\n```\n\n\n:::\n:::\n\n\n### *Paste as tribble*\n\nOutra opção para criar um novo data frame é colar utilizando a opção \"*Paste as tribble*\":\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat2 <- tibble::tribble(\n      ~trat, ~rep, ~comp,\n      \"Mg2\",   1L,     9,\n      \"Mg2\",   2L,  12.5,\n      \"Mg2\",   3L,    10,\n      \"Mg2\",   4L,     8,\n      \"Mg2\",   5L,  13.2,\n      \"Mg2\",   6L,    11,\n      \"Mg2\",   7L,  10.8,\n      \"Mg2\",   8L,   9.5,\n      \"Mg2\",   9L,  10.8,\n      \"Mg2\",  10L,  10.4,\n  \"control\",   1L, 13.72,\n  \"control\",   2L, 15.91,\n  \"control\",   3L,  15.7,\n  \"control\",   4L,  14.2,\n  \"control\",   5L,  15.9,\n  \"control\",   6L, 16.54,\n  \"control\",   7L,    18,\n  \"control\",   8L,  14.4,\n  \"control\",   9L, 16.41,\n  \"control\",  10L,    16\n  )\n\ndat2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 × 3\n   trat      rep  comp\n   <chr>   <int> <dbl>\n 1 Mg2         1   9  \n 2 Mg2         2  12.5\n 3 Mg2         3  10  \n 4 Mg2         4   8  \n 5 Mg2         5  13.2\n 6 Mg2         6  11  \n 7 Mg2         7  10.8\n 8 Mg2         8   9.5\n 9 Mg2         9  10.8\n10 Mg2        10  10.4\n11 control     1  13.7\n12 control     2  15.9\n13 control     3  15.7\n14 control     4  14.2\n15 control     5  15.9\n16 control     6  16.5\n17 control     7  18  \n18 control     8  14.4\n19 control     9  16.4\n20 control    10  16  \n```\n\n\n:::\n:::\n\n\nA função tribble também pode ser utilizada para colar dados obtidos da internet.\\\nExemplo 1:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat3 <- tibble::tribble(\n  ~Estado, ~Cidade, ~Pop.2010, ~Pop.2022, ~Variacao,\n  \"MG\",            \"Serra.da.Saudade\", 815, 833,  \"2,20%\",\n  \"SP\",                       \"Bora\",    805,    907,  \"12,70%\",\n  \"GO\",                 \"Anhanguera\",   1.02,    924,  \"-9,40%\",\n  \"MT\",                 \"Araguainha\",  1.096,   1.01,  \"-7,80%\",\n  \"SP\",              \"Nova Castilho\",  1.125,  1.062,  \"-5,60%\",\n  \"MG\",            \"Cedro do Abaete\",   1.21,  1.081, \"-10,70%\",\n  \"RS\",             \"Andre da Rocha\",  1.216,  1.135,  \"-6,70%\",\n  \"TO\",         \"Oliveira de Fátima\",  1.037,  1.164,  \"12,20%\",\n  \"RS\",             \"União da Serra\",  1.487,   1.17, \"-21,30%\",\n  \"MG\", \"São Sebastião do Rio Preto\",  1.613,  1.259, \"-21,90%\",\n  \"RS\",             \"Coqueiro Baixo\",  1.528,   1.29, \"-15,60%\",\n  \"RS\",              \"Engenho Velho\",  1.527,  1.296, \"-15,10%\"\n  )\n\ndat3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 5\n   Estado Cidade                     Pop.2010 Pop.2022 Variacao\n   <chr>  <chr>                         <dbl>    <dbl> <chr>   \n 1 MG     Serra.da.Saudade             815      833    2,20%   \n 2 SP     Bora                         805      907    12,70%  \n 3 GO     Anhanguera                     1.02   924    -9,40%  \n 4 MT     Araguainha                     1.10     1.01 -7,80%  \n 5 SP     Nova Castilho                  1.12     1.06 -5,60%  \n 6 MG     Cedro do Abaete                1.21     1.08 -10,70% \n 7 RS     Andre da Rocha                 1.22     1.14 -6,70%  \n 8 TO     Oliveira de Fátima             1.04     1.16 12,20%  \n 9 RS     União da Serra                 1.49     1.17 -21,30% \n10 MG     São Sebastião do Rio Preto     1.61     1.26 -21,90% \n11 RS     Coqueiro Baixo                 1.53     1.29 -15,60% \n12 RS     Engenho Velho                  1.53     1.30 -15,10% \n```\n\n\n:::\n:::\n\n\n\\\nExemplo 2:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat4 <- tibble::tribble(\n  ~Ranking,       ~País, ~`Produção.em.2022/23.(milhões.de.sacos.de.60.kg)`, ~Participação.total.no.mercado,\n  \"1\",\"Brasil\",664,\"38,1 %\",\n  \"2\",\"Vietnã\",311,\"17,8%\",\n  \"3\",\"Colômbia\",116,\"6,7%\",\n  \"4\",\"Indonésia\",97,\"5,6%\",\n  \"5\",\"Etiópia\",835,\"4,8%\",\n  \"Total\",\"Mundo\",170019,\"100%\")\n\ndat4\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  Ranking País      Produção.em.2022/23.(milhões.de.sac…¹ Participação.total.n…²\n  <chr>   <chr>                                     <dbl> <chr>                 \n1 1       Brasil                                      664 38,1 %                \n2 2       Vietnã                                      311 17,8%                 \n3 3       Colômbia                                    116 6,7%                  \n4 4       Indonésia                                    97 5,6%                  \n5 5       Etiópia                                     835 4,8%                  \n6 Total   Mundo                                    170019 100%                  \n# ℹ abbreviated names: ¹​`Produção.em.2022/23.(milhões.de.sacos.de.60.kg)`,\n#   ²​Participação.total.no.mercado\n```\n\n\n:::\n:::\n\n\n### Trabalhando com alguns dados\n\n#### Importando\n\nUtilizando a função \"*paste as tribble\"*, os dados presentes neste link (<https://r4pde.net/temporal-fitting.html#entering-data> - seção 10.4) serão importados:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npepper <- \n  tribble(\n   ~t,  ~`1`,  ~`2`,  ~`3`,\n   0,  0.08, 0.001, 0.001,\n   7,  0.13,  0.01, 0.001,\n  14,  0.78,  0.09,  0.01,\n  21,  0.92,  0.25,  0.05,\n  28,  0.99,   0.8,  0.18,\n  35, 0.995,  0.98,  0.34,\n  42, 0.999,  0.99,  0.48,\n  49, 0.999, 0.999,  0.74\n  )\n\npepper\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 4\n      t   `1`   `2`   `3`\n  <dbl> <dbl> <dbl> <dbl>\n1     0 0.08  0.001 0.001\n2     7 0.13  0.01  0.001\n3    14 0.78  0.09  0.01 \n4    21 0.92  0.25  0.05 \n5    28 0.99  0.8   0.18 \n6    35 0.995 0.98  0.34 \n7    42 0.999 0.99  0.48 \n8    49 0.999 0.999 0.74 \n```\n\n\n:::\n:::\n\n\n#### Convertendo\n\nVisualizando os dados importados acima, é possível notar que eles estão no formato largo. Logo, será preciso transformá-los para o formato longo. Para isso, será utilizada a função `pivot_longer (tidyr)`. Indicamos quais colunas serão transformadas para o formato longo e atribuímos nomes às novas colunas:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npepper2 <- pepper %>% \n  pivot_longer(2:4,\n               names_to = \"epidemic\",\n               values_to = \"inc\")\n\npepper2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 24 × 3\n       t epidemic   inc\n   <dbl> <chr>    <dbl>\n 1     0 1        0.08 \n 2     0 2        0.001\n 3     0 3        0.001\n 4     7 1        0.13 \n 5     7 2        0.01 \n 6     7 3        0.001\n 7    14 1        0.78 \n 8    14 2        0.09 \n 9    14 3        0.01 \n10    21 1        0.92 \n# ℹ 14 more rows\n```\n\n\n:::\n:::\n\n\n#### Construindo gráfico\n\nEm seguida, com pacote `ggplot2`, será feito um gráfico de pontos e linhas a partir dos dados carregados:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npepper2 %>% \n  ggplot(aes(t, inc, color = epidemic))+\n  geom_point()+\n  geom_line()+\n  annotate(geom = \"text\",\n           x = 12,\n           y = 0.75,\n           label = \"1\")+\n  annotate(geom = \"text\",\n           x = 22,\n           y = 0.50,\n           label = \"2\")+\n   annotate(geom = \"text\",\n           x = 32,\n           y = 0.35,\n           label = \"3\")+\n  theme_grey()+\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](Aula-4.1_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gsheet)\ndata <- gsheet::gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1aID5Dh6PlBVCKzU1j7k-WA6zuWQWE2NhtWEgdJtt5iA/edit#gid=921203844\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %>%\n  group_by(trat) %>%\n  ggplot(aes(trat, comp))+\n  geom_jitter(width = 0.1)\n```\n\n::: {.cell-output-display}\n![](Aula-4.1_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %>%\n  group_by(trat) %>%\n  summarise(mean_comp = mean(comp),\n            sd_comp = sd(comp)) %>%\n  ggplot(aes(trat, mean_comp))+\n  #geom_col(fill = \"steelblue\", width = 0.5)+\n  geom_point(size = 2)+\n  ylim (5,20)+\n  geom_errorbar(aes(ymin = mean_comp - sd_comp,\n                    ymax = mean_comp + sd_comp),\n                width = 0.2)+\n  annotate(geom = \"text\",\n           x = 1,\n           y = 18,\n           label = \"*\", size =5)+\n  labs(\n    y = \"Mean Comp\")\n```\n\n::: {.cell-output-display}\n![](Aula-4.1_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}